{
  "version": 3,
  "sources": ["../../three/examples/jsm/loaders/RGBMLoader.js"],
  "sourcesContent": ["import {\n\tDataTextureLoader,\n\tRGBAFormat,\n\tLinearFilter,\n\tCubeTexture,\n\tHalfFloatType,\n\tDataUtils\n} from 'three';\n\nclass RGBMLoader extends DataTextureLoader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.type = HalfFloatType;\n\t\tthis.maxRange = 7; // more information about this property at https://iwasbeingirony.blogspot.com/2010/06/difference-between-rgbm-and-rgbd.html\n\n\t}\n\n\tsetDataType( value ) {\n\n\t\tthis.type = value;\n\t\treturn this;\n\n\t}\n\n\tsetMaxRange( value ) {\n\n\t\tthis.maxRange = value;\n\t\treturn this;\n\n\t}\n\n\tloadCubemap( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\ttexture.images[ i ] = undefined;\n\n\t\t}\n\n\t\tlet loaded = 0;\n\n\t\tconst scope = this;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tscope.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\ttexture.type = this.type;\n\t\ttexture.format = RGBAFormat;\n\t\ttexture.minFilter = LinearFilter;\n\t\ttexture.generateMipmaps = false;\n\n\t\treturn texture;\n\n\t}\n\n\tloadCubemapAsync( urls, onProgress ) {\n\n\t\treturn new Promise( ( resolve, reject ) => {\n\n\t\t\tthis.loadCubemap( urls, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( buffer ) {\n\n\t\tconst img = UPNG.decode( buffer );\n\t\tconst rgba = UPNG.toRGBA8( img )[ 0 ];\n\n\t\tconst data = new Uint8Array( rgba );\n\t\tconst size = img.width * img.height * 4;\n\n\t\tconst output = ( this.type === HalfFloatType ) ? new Uint16Array( size ) : new Float32Array( size );\n\n\t\t// decode RGBM\n\n\t\tfor ( let i = 0; i < data.length; i += 4 ) {\n\n\t\t\tconst r = data[ i + 0 ] / 255;\n\t\t\tconst g = data[ i + 1 ] / 255;\n\t\t\tconst b = data[ i + 2 ] / 255;\n\t\t\tconst a = data[ i + 3 ] / 255;\n\n\t\t\tif ( this.type === HalfFloatType ) {\n\n\t\t\t\toutput[ i + 0 ] = DataUtils.toHalfFloat( Math.min( r * a * this.maxRange, 65504 ) );\n\t\t\t\toutput[ i + 1 ] = DataUtils.toHalfFloat( Math.min( g * a * this.maxRange, 65504 ) );\n\t\t\t\toutput[ i + 2 ] = DataUtils.toHalfFloat( Math.min( b * a * this.maxRange, 65504 ) );\n\t\t\t\toutput[ i + 3 ] = DataUtils.toHalfFloat( 1 );\n\n\t\t\t} else {\n\n\t\t\t\toutput[ i + 0 ] = r * a * this.maxRange;\n\t\t\t\toutput[ i + 1 ] = g * a * this.maxRange;\n\t\t\t\toutput[ i + 2 ] = b * a * this.maxRange;\n\t\t\t\toutput[ i + 3 ] = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\twidth: img.width,\n\t\t\theight: img.height,\n\t\t\tdata: output,\n\t\t\tformat: RGBAFormat,\n\t\t\ttype: this.type,\n\t\t\tflipY: true\n\t\t};\n\n\t}\n\n}\n\n// from https://github.com/photopea/UPNG.js (MIT License)\n\nvar UPNG = {};\n\nUPNG.toRGBA8 = function ( out ) {\n\n\tvar w = out.width, h = out.height;\n\tif ( out.tabs.acTL == null ) return [ UPNG.toRGBA8.decodeImage( out.data, w, h, out ).buffer ];\n\n\tvar frms = [];\n\tif ( out.frames[ 0 ].data == null ) out.frames[ 0 ].data = out.data;\n\n\tvar len = w * h * 4, img = new Uint8Array( len ), empty = new Uint8Array( len ), prev = new Uint8Array( len );\n\tfor ( var i = 0; i < out.frames.length; i ++ ) {\n\n\t\tvar frm = out.frames[ i ];\n\t\tvar fx = frm.rect.x, fy = frm.rect.y, fw = frm.rect.width, fh = frm.rect.height;\n\t\tvar fdata = UPNG.toRGBA8.decodeImage( frm.data, fw, fh, out );\n\n\t\tif ( i != 0 ) for ( var j = 0; j < len; j ++ ) prev[ j ] = img[ j ];\n\n\t\tif ( frm.blend == 0 ) UPNG._copyTile( fdata, fw, fh, img, w, h, fx, fy, 0 );\n\t\telse if ( frm.blend == 1 ) UPNG._copyTile( fdata, fw, fh, img, w, h, fx, fy, 1 );\n\n\t\tfrms.push( img.buffer.slice( 0 ) );\n\n\t\tif ( frm.dispose == 1 ) UPNG._copyTile( empty, fw, fh, img, w, h, fx, fy, 0 );\n\t\telse if ( frm.dispose == 2 ) for ( var j = 0; j < len; j ++ ) img[ j ] = prev[ j ];\n\n\t}\n\n\treturn frms;\n\n};\n\nUPNG.toRGBA8.decodeImage = function ( data, w, h, out ) {\n\n\tvar area = w * h, bpp = UPNG.decode._getBPP( out );\n\tvar bpl = Math.ceil( w * bpp / 8 );\t// bytes per line\n\n\tvar bf = new Uint8Array( area * 4 ), bf32 = new Uint32Array( bf.buffer );\n\tvar ctype = out.ctype, depth = out.depth;\n\tvar rs = UPNG._bin.readUshort;\n\n\tif ( ctype == 6 ) { // RGB + alpha\n\n\t\tvar qarea = area << 2;\n\t\tif ( depth == 8 ) for ( var i = 0; i < qarea; i += 4 ) {\n\n\t\t\tbf[ i ] = data[ i ]; bf[ i + 1 ] = data[ i + 1 ]; bf[ i + 2 ] = data[ i + 2 ]; bf[ i + 3 ] = data[ i + 3 ];\n\n\t\t}\n\n\t\tif ( depth == 16 ) for ( var i = 0; i < qarea; i ++ ) {\n\n\t\t\tbf[ i ] = data[ i << 1 ];\n\n\t\t}\n\n\t} else if ( ctype == 2 ) {\t// RGB\n\n\t\tvar ts = out.tabs[ 'tRNS' ];\n\t\tif ( ts == null ) {\n\n\t\t\tif ( depth == 8 ) for ( var i = 0; i < area; i ++ ) {\n\n\t\t\t\tvar ti = i * 3; bf32[ i ] = ( 255 << 24 ) | ( data[ ti + 2 ] << 16 ) | ( data[ ti + 1 ] << 8 ) | data[ ti ];\n\n\t\t\t}\n\n\t\t\tif ( depth == 16 ) for ( var i = 0; i < area; i ++ ) {\n\n\t\t\t\tvar ti = i * 6; bf32[ i ] = ( 255 << 24 ) | ( data[ ti + 4 ] << 16 ) | ( data[ ti + 2 ] << 8 ) | data[ ti ];\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar tr = ts[ 0 ], tg = ts[ 1 ], tb = ts[ 2 ];\n\t\t\tif ( depth == 8 ) for ( var i = 0; i < area; i ++ ) {\n\n\t\t\t\tvar qi = i << 2, ti = i * 3; bf32[ i ] = ( 255 << 24 ) | ( data[ ti + 2 ] << 16 ) | ( data[ ti + 1 ] << 8 ) | data[ ti ];\n\t\t\t\tif ( data[ ti ] == tr && data[ ti + 1 ] == tg && data[ ti + 2 ] == tb ) bf[ qi + 3 ] = 0;\n\n\t\t\t}\n\n\t\t\tif ( depth == 16 ) for ( var i = 0; i < area; i ++ ) {\n\n\t\t\t\tvar qi = i << 2, ti = i * 6; bf32[ i ] = ( 255 << 24 ) | ( data[ ti + 4 ] << 16 ) | ( data[ ti + 2 ] << 8 ) | data[ ti ];\n\t\t\t\tif ( rs( data, ti ) == tr && rs( data, ti + 2 ) == tg && rs( data, ti + 4 ) == tb ) bf[ qi + 3 ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t} else if ( ctype == 3 ) {\t// palette\n\n\t\tvar p = out.tabs[ 'PLTE' ], ap = out.tabs[ 'tRNS' ], tl = ap ? ap.length : 0;\n\t\t//console.log(p, ap);\n\t\tif ( depth == 1 ) for ( var y = 0; y < h; y ++ ) {\n\n\t\t\tvar s0 = y * bpl, t0 = y * w;\n\t\t\tfor ( var i = 0; i < w; i ++ ) {\n\n\t\t\t\tvar qi = ( t0 + i ) << 2, j = ( ( data[ s0 + ( i >> 3 ) ] >> ( 7 - ( ( i & 7 ) << 0 ) ) ) & 1 ), cj = 3 * j; bf[ qi ] = p[ cj ]; bf[ qi + 1 ] = p[ cj + 1 ]; bf[ qi + 2 ] = p[ cj + 2 ]; bf[ qi + 3 ] = ( j < tl ) ? ap[ j ] : 255;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( depth == 2 ) for ( var y = 0; y < h; y ++ ) {\n\n\t\t\tvar s0 = y * bpl, t0 = y * w;\n\t\t\tfor ( var i = 0; i < w; i ++ ) {\n\n\t\t\t\tvar qi = ( t0 + i ) << 2, j = ( ( data[ s0 + ( i >> 2 ) ] >> ( 6 - ( ( i & 3 ) << 1 ) ) ) & 3 ), cj = 3 * j; bf[ qi ] = p[ cj ]; bf[ qi + 1 ] = p[ cj + 1 ]; bf[ qi + 2 ] = p[ cj + 2 ]; bf[ qi + 3 ] = ( j < tl ) ? ap[ j ] : 255;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( depth == 4 ) for ( var y = 0; y < h; y ++ ) {\n\n\t\t\tvar s0 = y * bpl, t0 = y * w;\n\t\t\tfor ( var i = 0; i < w; i ++ ) {\n\n\t\t\t\tvar qi = ( t0 + i ) << 2, j = ( ( data[ s0 + ( i >> 1 ) ] >> ( 4 - ( ( i & 1 ) << 2 ) ) ) & 15 ), cj = 3 * j; bf[ qi ] = p[ cj ]; bf[ qi + 1 ] = p[ cj + 1 ]; bf[ qi + 2 ] = p[ cj + 2 ]; bf[ qi + 3 ] = ( j < tl ) ? ap[ j ] : 255;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( depth == 8 ) for ( var i = 0; i < area; i ++ ) {\n\n\t\t\tvar qi = i << 2, j = data[ i ], cj = 3 * j; bf[ qi ] = p[ cj ]; bf[ qi + 1 ] = p[ cj + 1 ]; bf[ qi + 2 ] = p[ cj + 2 ]; bf[ qi + 3 ] = ( j < tl ) ? ap[ j ] : 255;\n\n\t\t}\n\n\t} else if ( ctype == 4 ) {\t// gray + alpha\n\n\t\tif ( depth == 8 ) for ( var i = 0; i < area; i ++ ) {\n\n\t\t\tvar qi = i << 2, di = i << 1, gr = data[ di ]; bf[ qi ] = gr; bf[ qi + 1 ] = gr; bf[ qi + 2 ] = gr; bf[ qi + 3 ] = data[ di + 1 ];\n\n\t\t}\n\n\t\tif ( depth == 16 ) for ( var i = 0; i < area; i ++ ) {\n\n\t\t\tvar qi = i << 2, di = i << 2, gr = data[ di ]; bf[ qi ] = gr; bf[ qi + 1 ] = gr; bf[ qi + 2 ] = gr; bf[ qi + 3 ] = data[ di + 2 ];\n\n\t\t}\n\n\t} else if ( ctype == 0 ) {\t// gray\n\n\t\tvar tr = out.tabs[ 'tRNS' ] ? out.tabs[ 'tRNS' ] : - 1;\n\t\tfor ( var y = 0; y < h; y ++ ) {\n\n\t\t\tvar off = y * bpl, to = y * w;\n\t\t\tif ( depth == 1 ) for ( var x = 0; x < w; x ++ ) {\n\n\t\t\t\tvar gr = 255 * ( ( data[ off + ( x >>> 3 ) ] >>> ( 7 - ( x & 7 ) ) ) & 1 ), al = ( gr == tr * 255 ) ? 0 : 255; bf32[ to + x ] = ( al << 24 ) | ( gr << 16 ) | ( gr << 8 ) | gr;\n\n\t\t\t}\n\t\t\telse if ( depth == 2 ) for ( var x = 0; x < w; x ++ ) {\n\n\t\t\t\tvar gr = 85 * ( ( data[ off + ( x >>> 2 ) ] >>> ( 6 - ( ( x & 3 ) << 1 ) ) ) & 3 ), al = ( gr == tr * 85 ) ? 0 : 255; bf32[ to + x ] = ( al << 24 ) | ( gr << 16 ) | ( gr << 8 ) | gr;\n\n\t\t\t}\n\t\t\telse if ( depth == 4 ) for ( var x = 0; x < w; x ++ ) {\n\n\t\t\t\tvar gr = 17 * ( ( data[ off + ( x >>> 1 ) ] >>> ( 4 - ( ( x & 1 ) << 2 ) ) ) & 15 ), al = ( gr == tr * 17 ) ? 0 : 255; bf32[ to + x ] = ( al << 24 ) | ( gr << 16 ) | ( gr << 8 ) | gr;\n\n\t\t\t}\n\t\t\telse if ( depth == 8 ) for ( var x = 0; x < w; x ++ ) {\n\n\t\t\t\tvar gr = data[ off + x ], al = ( gr == tr ) ? 0 : 255; bf32[ to + x ] = ( al << 24 ) | ( gr << 16 ) | ( gr << 8 ) | gr;\n\n\t\t\t}\n\t\t\telse if ( depth == 16 ) for ( var x = 0; x < w; x ++ ) {\n\n\t\t\t\tvar gr = data[ off + ( x << 1 ) ], al = ( rs( data, off + ( x << 1 ) ) == tr ) ? 0 : 255; bf32[ to + x ] = ( al << 24 ) | ( gr << 16 ) | ( gr << 8 ) | gr;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t//console.log(Date.now()-time);\n\treturn bf;\n\n};\n\n\n\nUPNG.decode = function ( buff ) {\n\n\tvar data = new Uint8Array( buff ), offset = 8, bin = UPNG._bin, rUs = bin.readUshort, rUi = bin.readUint;\n\tvar out = { tabs: {}, frames: [] };\n\tvar dd = new Uint8Array( data.length ), doff = 0;\t // put all IDAT data into it\n\tvar fd, foff = 0;\t// frames\n\tvar text, keyw, bfr;\n\n\tvar mgck = [ 0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a ];\n\tfor ( var i = 0; i < 8; i ++ ) if ( data[ i ] != mgck[ i ] ) throw new Error( 'The input is not a PNG file!' );\n\n\twhile ( offset < data.length ) {\n\n\t\tvar len = bin.readUint( data, offset ); offset += 4;\n\t\tvar type = bin.readASCII( data, offset, 4 ); offset += 4;\n\t\t//console.log(type,len);\n\n\t\tif ( type == 'IHDR' ) {\n\n\t\t\tUPNG.decode._IHDR( data, offset, out );\n\n\t\t} else if ( type == 'CgBI' ) {\n\n\t\t\tout.tabs[ type ] = data.slice( offset, offset + 4 );\n\n\t\t} else if ( type == 'IDAT' ) {\n\n\t\t\tfor ( var i = 0; i < len; i ++ ) dd[ doff + i ] = data[ offset + i ];\n\t\t\tdoff += len;\n\n\t\t} else if ( type == 'acTL' ) {\n\n\t\t\tout.tabs[ type ] = { num_frames: rUi( data, offset ), num_plays: rUi( data, offset + 4 ) };\n\t\t\tfd = new Uint8Array( data.length );\n\n\t\t} else if ( type == 'fcTL' ) {\n\n\t\t\tif ( foff != 0 ) {\n\n\t\t\t\tvar fr = out.frames[ out.frames.length - 1 ];\n\t\t\t\tfr.data = UPNG.decode._decompress( out, fd.slice( 0, foff ), fr.rect.width, fr.rect.height ); foff = 0;\n\n\t\t\t}\n\n\t\t\tvar rct = { x: rUi( data, offset + 12 ), y: rUi( data, offset + 16 ), width: rUi( data, offset + 4 ), height: rUi( data, offset + 8 ) };\n\t\t\tvar del = rUs( data, offset + 22 ); del = rUs( data, offset + 20 ) / ( del == 0 ? 100 : del );\n\t\t\tvar frm = { rect: rct, delay: Math.round( del * 1000 ), dispose: data[ offset + 24 ], blend: data[ offset + 25 ] };\n\t\t\t//console.log(frm);\n\t\t\tout.frames.push( frm );\n\n\t\t} else if ( type == 'fdAT' ) {\n\n\t\t\tfor ( var i = 0; i < len - 4; i ++ ) fd[ foff + i ] = data[ offset + i + 4 ];\n\t\t\tfoff += len - 4;\n\n\t\t} else if ( type == 'pHYs' ) {\n\n\t\t\tout.tabs[ type ] = [ bin.readUint( data, offset ), bin.readUint( data, offset + 4 ), data[ offset + 8 ] ];\n\n\t\t} else if ( type == 'cHRM' ) {\n\n\t\t\tout.tabs[ type ] = [];\n\t\t\tfor ( var i = 0; i < 8; i ++ ) out.tabs[ type ].push( bin.readUint( data, offset + i * 4 ) );\n\n\t\t} else if ( type == 'tEXt' || type == 'zTXt' ) {\n\n\t\t\tif ( out.tabs[ type ] == null ) out.tabs[ type ] = {};\n\t\t\tvar nz = bin.nextZero( data, offset );\n\t\t\tkeyw = bin.readASCII( data, offset, nz - offset );\n\t\t\tvar tl = offset + len - nz - 1;\n\t\t\tif ( type == 'tEXt' ) text = bin.readASCII( data, nz + 1, tl );\n\t\t\telse {\n\n\t\t\t\tbfr = UPNG.decode._inflate( data.slice( nz + 2, nz + 2 + tl ) );\n\t\t\t\ttext = bin.readUTF8( bfr, 0, bfr.length );\n\n\t\t\t}\n\n\t\t\tout.tabs[ type ][ keyw ] = text;\n\n\t\t} else if ( type == 'iTXt' ) {\n\n\t\t\tif ( out.tabs[ type ] == null ) out.tabs[ type ] = {};\n\t\t\tvar nz = 0, off = offset;\n\t\t\tnz = bin.nextZero( data, off );\n\t\t\tkeyw = bin.readASCII( data, off, nz - off ); off = nz + 1;\n\t\t\tvar cflag = data[ off ]; off += 2;\n\t\t\tnz = bin.nextZero( data, off );\n\t\t\tbin.readASCII( data, off, nz - off ); off = nz + 1;\n\t\t\tnz = bin.nextZero( data, off );\n\t\t\tbin.readUTF8( data, off, nz - off ); off = nz + 1;\n\t\t\tvar tl = len - ( off - offset );\n\t\t\tif ( cflag == 0 ) text = bin.readUTF8( data, off, tl );\n\t\t\telse {\n\n\t\t\t\tbfr = UPNG.decode._inflate( data.slice( off, off + tl ) );\n\t\t\t\ttext = bin.readUTF8( bfr, 0, bfr.length );\n\n\t\t\t}\n\n\t\t\tout.tabs[ type ][ keyw ] = text;\n\n\t\t} else if ( type == 'PLTE' ) {\n\n\t\t\tout.tabs[ type ] = bin.readBytes( data, offset, len );\n\n\t\t} else if ( type == 'hIST' ) {\n\n\t\t\tvar pl = out.tabs[ 'PLTE' ].length / 3;\n\t\t\tout.tabs[ type ] = []; for ( var i = 0; i < pl; i ++ ) out.tabs[ type ].push( rUs( data, offset + i * 2 ) );\n\n\t\t} else if ( type == 'tRNS' ) {\n\n\t\t\tif ( out.ctype == 3 ) out.tabs[ type ] = bin.readBytes( data, offset, len );\n\t\t\telse if ( out.ctype == 0 ) out.tabs[ type ] = rUs( data, offset );\n\t\t\telse if ( out.ctype == 2 ) out.tabs[ type ] = [ rUs( data, offset ), rUs( data, offset + 2 ), rUs( data, offset + 4 ) ];\n\t\t\t//else console.log(\"tRNS for unsupported color type\",out.ctype, len);\n\n\t\t} else if ( type == 'gAMA' ) out.tabs[ type ] = bin.readUint( data, offset ) / 100000;\n\t\telse if ( type == 'sRGB' ) out.tabs[ type ] = data[ offset ];\n\t\telse if ( type == 'bKGD' ) {\n\n\t\t\tif ( out.ctype == 0 || out.ctype == 4 ) out.tabs[ type ] = [ rUs( data, offset ) ];\n\t\t\telse if ( out.ctype == 2 || out.ctype == 6 ) out.tabs[ type ] = [ rUs( data, offset ), rUs( data, offset + 2 ), rUs( data, offset + 4 ) ];\n\t\t\telse if ( out.ctype == 3 ) out.tabs[ type ] = data[ offset ];\n\n\t\t} else if ( type == 'IEND' ) {\n\n\t\t\tbreak;\n\n\t\t}\n\n\t\t//else {  console.log(\"unknown chunk type\", type, len);  out.tabs[type]=data.slice(offset,offset+len);  }\n\t\toffset += len;\n\t\tbin.readUint( data, offset ); offset += 4;\n\n\t}\n\n\tif ( foff != 0 ) {\n\n\t\tvar fr = out.frames[ out.frames.length - 1 ];\n\t\tfr.data = UPNG.decode._decompress( out, fd.slice( 0, foff ), fr.rect.width, fr.rect.height );\n\n\t}\n\n\tout.data = UPNG.decode._decompress( out, dd, out.width, out.height );\n\n\tdelete out.compress; delete out.interlace; delete out.filter;\n\treturn out;\n\n};\n\nUPNG.decode._decompress = function ( out, dd, w, h ) {\n\n\tvar bpp = UPNG.decode._getBPP( out ), bpl = Math.ceil( w * bpp / 8 ), buff = new Uint8Array( ( bpl + 1 + out.interlace ) * h );\n\tif ( out.tabs[ 'CgBI' ] ) dd = UPNG.inflateRaw( dd, buff );\n\telse dd = UPNG.decode._inflate( dd, buff );\n\n\tif ( out.interlace == 0 ) dd = UPNG.decode._filterZero( dd, out, 0, w, h );\n\telse if ( out.interlace == 1 ) dd = UPNG.decode._readInterlace( dd, out );\n\n\treturn dd;\n\n};\n\nUPNG.decode._inflate = function ( data, buff ) {\n\n\tvar out = UPNG[ 'inflateRaw' ]( new Uint8Array( data.buffer, 2, data.length - 6 ), buff ); return out;\n\n};\n\nUPNG.inflateRaw = function () {\n\n\tvar H = {}; H.H = {}; H.H.N = function ( N, W ) {\n\n\t\tvar R = Uint8Array, i = 0, m = 0, J = 0, h = 0, Q = 0, X = 0, u = 0, w = 0, d = 0, v, C;\n\t\tif ( N[ 0 ] == 3 && N[ 1 ] == 0 ) return W ? W : new R( 0 ); var V = H.H, n = V.b, A = V.e, l = V.R, M = V.n, I = V.A, e = V.Z, b = V.m, Z = W == null;\n\t\tif ( Z )W = new R( N.length >>> 2 << 5 ); while ( i == 0 ) {\n\n\t\t\ti = n( N, d, 1 ); m = n( N, d + 1, 2 ); d += 3; if ( m == 0 ) {\n\n\t\t\t\tif ( ( d & 7 ) != 0 )d += 8 - ( d & 7 );\n\t\t\t\tvar D = ( d >>> 3 ) + 4, q = N[ D - 4 ] | N[ D - 3 ] << 8; if ( Z )W = H.H.W( W, w + q ); W.set( new R( N.buffer, N.byteOffset + D, q ), w ); d = D + q << 3;\n\t\t\t\tw += q; continue\n\t\t\t\t;\n\n\t\t\t}\n\n\t\t\tif ( Z )W = H.H.W( W, w + ( 1 << 17 ) ); if ( m == 1 ) {\n\n\t\t\t\tv = b.J; C = b.h; X = ( 1 << 9 ) - 1; u = ( 1 << 5 ) - 1;\n\n\t\t\t}\n\n\t\t\tif ( m == 2 ) {\n\n\t\t\t\tJ = A( N, d, 5 ) + 257;\n\t\t\t\th = A( N, d + 5, 5 ) + 1; Q = A( N, d + 10, 4 ) + 4; d += 14; var j = 1; for ( var c = 0; c < 38; c += 2 ) {\n\n\t\t\t\t\tb.Q[ c ] = 0; b.Q[ c + 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var c = 0;\n\t\t\t\t\tc < Q; c ++ ) {\n\n\t\t\t\t\tvar K = A( N, d + c * 3, 3 ); b.Q[ ( b.X[ c ] << 1 ) + 1 ] = K; if ( K > j )j = K\n\t\t\t\t\t;\n\n\t\t\t\t}\n\n\t\t\t\td += 3 * Q; M( b.Q, j ); I( b.Q, j, b.u ); v = b.w; C = b.d;\n\t\t\t\td = l( b.u, ( 1 << j ) - 1, J + h, N, d, b.v ); var r = V.V( b.v, 0, J, b.C ); X = ( 1 << r ) - 1; var S = V.V( b.v, J, h, b.D ); u = ( 1 << S ) - 1; M( b.C, r );\n\t\t\t\tI( b.C, r, v ); M( b.D, S ); I( b.D, S, C )\n\t\t\t\t;\n\n\t\t\t}\n\n\t\t\twhile ( ! 0 ) {\n\n\t\t\t\tvar T = v[ e( N, d ) & X ]; d += T & 15; var p = T >>> 4; if ( p >>> 8 == 0 ) {\n\n\t\t\t\t\tW[ w ++ ] = p;\n\n\t\t\t\t} else if ( p == 256 ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar z = w + p - 254;\n\t\t\t\t\tif ( p > 264 ) {\n\n\t\t\t\t\t\tvar _ = b.q[ p - 257 ]; z = w + ( _ >>> 3 ) + A( N, d, _ & 7 ); d += _ & 7;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar $ = C[ e( N, d ) & u ]; d += $ & 15; var s = $ >>> 4, Y = b.c[ s ], a = ( Y >>> 4 ) + n( N, d, Y & 15 );\n\t\t\t\t\td += Y & 15; while ( w < z ) {\n\n\t\t\t\t\t\tW[ w ] = W[ w ++ - a ]; W[ w ] = W[ w ++ - a ]; W[ w ] = W[ w ++ - a ]; W[ w ] = W[ w ++ - a ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tw = z\n\t\t\t\t\t;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn W.length == w ? W : W.slice( 0, w )\n\t\t;\n\n\t};\n\n\tH.H.W = function ( N, W ) {\n\n\t\tvar R = N.length; if ( W <= R ) return N; var V = new Uint8Array( R << 1 ); V.set( N, 0 ); return V;\n\n\t};\n\n\tH.H.R = function ( N, W, R, V, n, A ) {\n\n\t\tvar l = H.H.e, M = H.H.Z, I = 0; while ( I < R ) {\n\n\t\t\tvar e = N[ M( V, n ) & W ]; n += e & 15; var b = e >>> 4;\n\t\t\tif ( b <= 15 ) {\n\n\t\t\t\tA[ I ] = b; I ++;\n\n\t\t\t} else {\n\n\t\t\t\tvar Z = 0, m = 0; if ( b == 16 ) {\n\n\t\t\t\t\tm = 3 + l( V, n, 2 ); n += 2; Z = A[ I - 1 ];\n\n\t\t\t\t} else if ( b == 17 ) {\n\n\t\t\t\t\tm = 3 + l( V, n, 3 );\n\t\t\t\t\tn += 3\n\t\t\t\t\t;\n\n\t\t\t\t} else if ( b == 18 ) {\n\n\t\t\t\t\tm = 11 + l( V, n, 7 ); n += 7;\n\n\t\t\t\t}\n\n\t\t\t\tvar J = I + m; while ( I < J ) {\n\n\t\t\t\t\tA[ I ] = Z; I ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn n\n\t\t;\n\n\t};\n\n\tH.H.V = function ( N, W, R, V ) {\n\n\t\tvar n = 0, A = 0, l = V.length >>> 1;\n\t\twhile ( A < R ) {\n\n\t\t\tvar M = N[ A + W ]; V[ A << 1 ] = 0; V[ ( A << 1 ) + 1 ] = M; if ( M > n )n = M; A ++;\n\n\t\t}\n\n\t\twhile ( A < l ) {\n\n\t\t\tV[ A << 1 ] = 0; V[ ( A << 1 ) + 1 ] = 0; A ++;\n\n\t\t}\n\n\t\treturn n\n\t\t;\n\n\t};\n\n\tH.H.n = function ( N, W ) {\n\n\t\tvar R = H.H.m, V = N.length, n, A, l, M, I, e = R.j; for ( var M = 0; M <= W; M ++ )e[ M ] = 0; for ( M = 1; M < V; M += 2 )e[ N[ M ] ] ++;\n\t\tvar b = R.K; n = 0; e[ 0 ] = 0; for ( A = 1; A <= W; A ++ ) {\n\n\t\t\tn = n + e[ A - 1 ] << 1; b[ A ] = n;\n\n\t\t}\n\n\t\tfor ( l = 0; l < V; l += 2 ) {\n\n\t\t\tI = N[ l + 1 ]; if ( I != 0 ) {\n\n\t\t\t\tN[ l ] = b[ I ];\n\t\t\t\tb[ I ] ++\n\t\t\t\t;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tH.H.A = function ( N, W, R ) {\n\n\t\tvar V = N.length, n = H.H.m, A = n.r; for ( var l = 0; l < V; l += 2 ) if ( N[ l + 1 ] != 0 ) {\n\n\t\t\tvar M = l >> 1, I = N[ l + 1 ], e = M << 4 | I, b = W - I, Z = N[ l ] << b, m = Z + ( 1 << b );\n\t\t\twhile ( Z != m ) {\n\n\t\t\t\tvar J = A[ Z ] >>> 15 - W; R[ J ] = e; Z ++;\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tH.H.l = function ( N, W ) {\n\n\t\tvar R = H.H.m.r, V = 15 - W; for ( var n = 0; n < N.length;\n\t\t\tn += 2 ) {\n\n\t\t\tvar A = N[ n ] << W - N[ n + 1 ]; N[ n ] = R[ A ] >>> V;\n\n\t\t}\n\n\t};\n\n\tH.H.M = function ( N, W, R ) {\n\n\t\tR = R << ( W & 7 ); var V = W >>> 3; N[ V ] |= R; N[ V + 1 ] |= R >>> 8;\n\n\t};\n\n\tH.H.I = function ( N, W, R ) {\n\n\t\tR = R << ( W & 7 ); var V = W >>> 3; N[ V ] |= R; N[ V + 1 ] |= R >>> 8; N[ V + 2 ] |= R >>> 16;\n\n\t};\n\n\tH.H.e = function ( N, W, R ) {\n\n\t\treturn ( N[ W >>> 3 ] | N[ ( W >>> 3 ) + 1 ] << 8 ) >>> ( W & 7 ) & ( 1 << R ) - 1;\n\n\t};\n\n\tH.H.b = function ( N, W, R ) {\n\n\t\treturn ( N[ W >>> 3 ] | N[ ( W >>> 3 ) + 1 ] << 8 | N[ ( W >>> 3 ) + 2 ] << 16 ) >>> ( W & 7 ) & ( 1 << R ) - 1;\n\n\t};\n\n\tH.H.Z = function ( N, W ) {\n\n\t\treturn ( N[ W >>> 3 ] | N[ ( W >>> 3 ) + 1 ] << 8 | N[ ( W >>> 3 ) + 2 ] << 16 ) >>> ( W & 7 );\n\n\t};\n\n\tH.H.i = function ( N, W ) {\n\n\t\treturn ( N[ W >>> 3 ] | N[ ( W >>> 3 ) + 1 ] << 8 | N[ ( W >>> 3 ) + 2 ] << 16 | N[ ( W >>> 3 ) + 3 ] << 24 ) >>> ( W & 7 );\n\n\t};\n\n\tH.H.m = function () {\n\n\t\tvar N = Uint16Array, W = Uint32Array;\n\t\treturn { K: new N( 16 ), j: new N( 16 ), X: [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ], S: [ 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 999, 999, 999 ], T: [ 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0 ], q: new N( 32 ), p: [ 1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 65535, 65535 ], z: [ 0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0 ], c: new W( 32 ), J: new N( 512 ), _: [], h: new N( 32 ), $: [], w: new N( 32768 ), C: [], v: [], d: new N( 32768 ), D: [], u: new N( 512 ), Q: [], r: new N( 1 << 15 ), s: new W( 286 ), Y: new W( 30 ), a: new W( 19 ), t: new W( 15e3 ), k: new N( 1 << 16 ), g: new N( 1 << 15 ) }\n\t\t;\n\n\t}();\n\t( function () {\n\n\t\tvar N = H.H.m, W = 1 << 15; for ( var R = 0; R < W; R ++ ) {\n\n\t\t\tvar V = R; V = ( V & 2863311530 ) >>> 1 | ( V & 1431655765 ) << 1;\n\t\t\tV = ( V & 3435973836 ) >>> 2 | ( V & 858993459 ) << 2; V = ( V & 4042322160 ) >>> 4 | ( V & 252645135 ) << 4; V = ( V & 4278255360 ) >>> 8 | ( V & 16711935 ) << 8;\n\t\t\tN.r[ R ] = ( V >>> 16 | V << 16 ) >>> 17\n\t\t\t;\n\n\t\t}\n\n\t\tfunction n( A, l, M ) {\n\n\t\t\twhile ( l -- != 0 )A.push( 0, M )\n\t\t\t;\n\n\t\t}\n\n\t\tfor ( var R = 0; R < 32; R ++ ) {\n\n\t\t\tN.q[ R ] = N.S[ R ] << 3 | N.T[ R ];\n\t\t\tN.c[ R ] = N.p[ R ] << 4 | N.z[ R ]\n\t\t\t;\n\n\t\t}\n\n\t\tn( N._, 144, 8 ); n( N._, 255 - 143, 9 ); n( N._, 279 - 255, 7 ); n( N._, 287 - 279, 8 ); H.H.n( N._, 9 );\n\t\tH.H.A( N._, 9, N.J ); H.H.l( N._, 9 ); n( N.$, 32, 5 ); H.H.n( N.$, 5 ); H.H.A( N.$, 5, N.h ); H.H.l( N.$, 5 ); n( N.Q, 19, 0 ); n( N.C, 286, 0 );\n\t\tn( N.D, 30, 0 ); n( N.v, 320, 0 )\n\t\t;\n\n\t}() );\n\n\treturn H.H.N\n\t;\n\n}();\n\n\nUPNG.decode._readInterlace = function ( data, out ) {\n\n\tvar w = out.width, h = out.height;\n\tvar bpp = UPNG.decode._getBPP( out ), cbpp = bpp >> 3, bpl = Math.ceil( w * bpp / 8 );\n\tvar img = new Uint8Array( h * bpl );\n\tvar di = 0;\n\n\tvar starting_row = [ 0, 0, 4, 0, 2, 0, 1 ];\n\tvar starting_col = [ 0, 4, 0, 2, 0, 1, 0 ];\n\tvar row_increment = [ 8, 8, 8, 4, 4, 2, 2 ];\n\tvar col_increment = [ 8, 8, 4, 4, 2, 2, 1 ];\n\n\tvar pass = 0;\n\twhile ( pass < 7 ) {\n\n\t\tvar ri = row_increment[ pass ], ci = col_increment[ pass ];\n\t\tvar sw = 0, sh = 0;\n\t\tvar cr = starting_row[ pass ]; while ( cr < h ) {\n\n\t\t\tcr += ri; sh ++;\n\n\t\t}\n\n\t\tvar cc = starting_col[ pass ]; while ( cc < w ) {\n\n\t\t\tcc += ci; sw ++;\n\n\t\t}\n\n\t\tvar bpll = Math.ceil( sw * bpp / 8 );\n\t\tUPNG.decode._filterZero( data, out, di, sw, sh );\n\n\t\tvar y = 0, row = starting_row[ pass ];\n\t\tvar val;\n\n\t\twhile ( row < h ) {\n\n\t\t\tvar col = starting_col[ pass ];\n\t\t\tvar cdi = ( di + y * bpll ) << 3;\n\n\t\t\twhile ( col < w ) {\n\n\t\t\t\tif ( bpp == 1 ) {\n\n\t\t\t\t\tval = data[ cdi >> 3 ]; val = ( val >> ( 7 - ( cdi & 7 ) ) ) & 1;\n\t\t\t\t\timg[ row * bpl + ( col >> 3 ) ] |= ( val << ( 7 - ( ( col & 7 ) << 0 ) ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( bpp == 2 ) {\n\n\t\t\t\t\tval = data[ cdi >> 3 ]; val = ( val >> ( 6 - ( cdi & 7 ) ) ) & 3;\n\t\t\t\t\timg[ row * bpl + ( col >> 2 ) ] |= ( val << ( 6 - ( ( col & 3 ) << 1 ) ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( bpp == 4 ) {\n\n\t\t\t\t\tval = data[ cdi >> 3 ]; val = ( val >> ( 4 - ( cdi & 7 ) ) ) & 15;\n\t\t\t\t\timg[ row * bpl + ( col >> 1 ) ] |= ( val << ( 4 - ( ( col & 1 ) << 2 ) ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( bpp >= 8 ) {\n\n\t\t\t\t\tvar ii = row * bpl + col * cbpp;\n\t\t\t\t\tfor ( var j = 0; j < cbpp; j ++ ) img[ ii + j ] = data[ ( cdi >> 3 ) + j ];\n\n\t\t\t\t}\n\n\t\t\t\tcdi += bpp; col += ci;\n\n\t\t\t}\n\n\t\t\ty ++; row += ri;\n\n\t\t}\n\n\t\tif ( sw * sh != 0 ) di += sh * ( 1 + bpll );\n\t\tpass = pass + 1;\n\n\t}\n\n\treturn img;\n\n};\n\nUPNG.decode._getBPP = function ( out ) {\n\n\tvar noc = [ 1, null, 3, 1, 2, null, 4 ][ out.ctype ];\n\treturn noc * out.depth;\n\n};\n\nUPNG.decode._filterZero = function ( data, out, off, w, h ) {\n\n\tvar bpp = UPNG.decode._getBPP( out ), bpl = Math.ceil( w * bpp / 8 ), paeth = UPNG.decode._paeth;\n\tbpp = Math.ceil( bpp / 8 );\n\n\tvar i, di, type = data[ off ], x = 0;\n\n\tif ( type > 1 ) data[ off ] = [ 0, 0, 1 ][ type - 2 ];\n\tif ( type == 3 ) for ( x = bpp; x < bpl; x ++ ) data[ x + 1 ] = ( data[ x + 1 ] + ( data[ x + 1 - bpp ] >>> 1 ) ) & 255;\n\n\tfor ( var y = 0; y < h; y ++ ) {\n\n\t\ti = off + y * bpl; di = i + y + 1;\n\t\ttype = data[ di - 1 ]; x = 0;\n\n\t\tif ( type == 0 ) for ( ; x < bpl; x ++ ) data[ i + x ] = data[ di + x ];\n\t\telse if ( type == 1 ) {\n\n\t\t\tfor ( ; x < bpp; x ++ ) data[ i + x ] = data[ di + x ];\n\t\t\t\t\t\t   for ( ; x < bpl; x ++ ) data[ i + x ] = ( data[ di + x ] + data[ i + x - bpp ] );\n\n\t\t} else if ( type == 2 ) {\n\n\t\t\tfor ( ; x < bpl; x ++ ) data[ i + x ] = ( data[ di + x ] + data[ i + x - bpl ] );\n\n\t\t} else if ( type == 3 ) {\n\n\t\t\tfor ( ; x < bpp; x ++ ) data[ i + x ] = ( data[ di + x ] + ( data[ i + x - bpl ] >>> 1 ) );\n\t\t\t               for ( ; x < bpl; x ++ ) data[ i + x ] = ( data[ di + x ] + ( ( data[ i + x - bpl ] + data[ i + x - bpp ] ) >>> 1 ) );\n\n\t\t} else {\n\n\t\t\tfor ( ; x < bpp; x ++ ) data[ i + x ] = ( data[ di + x ] + paeth( 0, data[ i + x - bpl ], 0 ) );\n\t\t\t\t\t\t   for ( ; x < bpl; x ++ ) data[ i + x ] = ( data[ di + x ] + paeth( data[ i + x - bpp ], data[ i + x - bpl ], data[ i + x - bpp - bpl ] ) );\n\n\t\t}\n\n\t}\n\n\treturn data;\n\n};\n\nUPNG.decode._paeth = function ( a, b, c ) {\n\n\tvar p = a + b - c, pa = ( p - a ), pb = ( p - b ), pc = ( p - c );\n\tif ( pa * pa <= pb * pb && pa * pa <= pc * pc ) return a;\n\telse if ( pb * pb <= pc * pc ) return b;\n\treturn c;\n\n};\n\nUPNG.decode._IHDR = function ( data, offset, out ) {\n\n\tvar bin = UPNG._bin;\n\tout.width = bin.readUint( data, offset ); offset += 4;\n\tout.height = bin.readUint( data, offset ); offset += 4;\n\tout.depth = data[ offset ]; offset ++;\n\tout.ctype = data[ offset ]; offset ++;\n\tout.compress = data[ offset ]; offset ++;\n\tout.filter = data[ offset ]; offset ++;\n\tout.interlace = data[ offset ]; offset ++;\n\n};\n\nUPNG._bin = {\n\tnextZero: function ( data, p ) {\n\n\t\twhile ( data[ p ] != 0 ) p ++; return p;\n\n\t},\n\treadUshort: function ( buff, p ) {\n\n\t\treturn ( buff[ p ] << 8 ) | buff[ p + 1 ];\n\n\t},\n\twriteUshort: function ( buff, p, n ) {\n\n\t\tbuff[ p ] = ( n >> 8 ) & 255; buff[ p + 1 ] = n & 255;\n\n\t},\n\treadUint: function ( buff, p ) {\n\n\t\treturn ( buff[ p ] * ( 256 * 256 * 256 ) ) + ( ( buff[ p + 1 ] << 16 ) | ( buff[ p + 2 ] << 8 ) | buff[ p + 3 ] );\n\n\t},\n\twriteUint: function ( buff, p, n ) {\n\n\t\tbuff[ p ] = ( n >> 24 ) & 255; buff[ p + 1 ] = ( n >> 16 ) & 255; buff[ p + 2 ] = ( n >> 8 ) & 255; buff[ p + 3 ] = n & 255;\n\n\t},\n\treadASCII: function ( buff, p, l ) {\n\n\t\tvar s = ''; for ( var i = 0; i < l; i ++ ) s += String.fromCharCode( buff[ p + i ] ); return s;\n\n\t},\n\twriteASCII: function ( data, p, s ) {\n\n\t\tfor ( var i = 0; i < s.length; i ++ ) data[ p + i ] = s.charCodeAt( i );\n\n\t},\n\treadBytes: function ( buff, p, l ) {\n\n\t\tvar arr = []; for ( var i = 0; i < l; i ++ ) arr.push( buff[ p + i ] ); return arr;\n\n\t},\n\tpad: function ( n ) {\n\n\t\treturn n.length < 2 ? '0' + n : n;\n\n\t},\n\treadUTF8: function ( buff, p, l ) {\n\n\t\tvar s = '', ns;\n\t\tfor ( var i = 0; i < l; i ++ ) s += '%' + UPNG._bin.pad( buff[ p + i ].toString( 16 ) );\n\t\ttry {\n\n\t\t\tns = decodeURIComponent( s );\n\n\t\t} catch ( e ) {\n\n\t\t\treturn UPNG._bin.readASCII( buff, p, l );\n\n\t\t}\n\n\t\treturn ns;\n\n\t}\n};\nUPNG._copyTile = function ( sb, sw, sh, tb, tw, th, xoff, yoff, mode ) {\n\n\tvar w = Math.min( sw, tw ), h = Math.min( sh, th );\n\tvar si = 0, ti = 0;\n\tfor ( var y = 0; y < h; y ++ )\n\t\tfor ( var x = 0; x < w; x ++ ) {\n\n\t\t\tif ( xoff >= 0 && yoff >= 0 ) {\n\n\t\t\t\tsi = ( y * sw + x ) << 2; ti = ( ( yoff + y ) * tw + xoff + x ) << 2;\n\n\t\t\t} else {\n\n\t\t\t\tsi = ( ( - yoff + y ) * sw - xoff + x ) << 2; ti = ( y * tw + x ) << 2;\n\n\t\t\t}\n\n\t\t\tif ( mode == 0 ) {\n\n\t\t\t\ttb[ ti ] = sb[ si ]; tb[ ti + 1 ] = sb[ si + 1 ]; tb[ ti + 2 ] = sb[ si + 2 ]; tb[ ti + 3 ] = sb[ si + 3 ];\n\n\t\t\t} else if ( mode == 1 ) {\n\n\t\t\t\tvar fa = sb[ si + 3 ] * ( 1 / 255 ), fr = sb[ si ] * fa, fg = sb[ si + 1 ] * fa, fb = sb[ si + 2 ] * fa;\n\t\t\t\tvar ba = tb[ ti + 3 ] * ( 1 / 255 ), br = tb[ ti ] * ba, bg = tb[ ti + 1 ] * ba, bb = tb[ ti + 2 ] * ba;\n\n\t\t\t\tvar ifa = 1 - fa, oa = fa + ba * ifa, ioa = ( oa == 0 ? 0 : 1 / oa );\n\t\t\t\ttb[ ti + 3 ] = 255 * oa;\n\t\t\t\ttb[ ti + 0 ] = ( fr + br * ifa ) * ioa;\n\t\t\t\ttb[ ti + 1 ] = ( fg + bg * ifa ) * ioa;\n\t\t\t\ttb[ ti + 2 ] = ( fb + bb * ifa ) * ioa;\n\n\t\t\t} else if ( mode == 2 ) {\t// copy only differences, otherwise zero\n\n\t\t\t\tvar fa = sb[ si + 3 ], fr = sb[ si ], fg = sb[ si + 1 ], fb = sb[ si + 2 ];\n\t\t\t\tvar ba = tb[ ti + 3 ], br = tb[ ti ], bg = tb[ ti + 1 ], bb = tb[ ti + 2 ];\n\t\t\t\tif ( fa == ba && fr == br && fg == bg && fb == bb ) {\n\n\t\t\t\t\ttb[ ti ] = 0; tb[ ti + 1 ] = 0; tb[ ti + 2 ] = 0; tb[ ti + 3 ] = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttb[ ti ] = fr; tb[ ti + 1 ] = fg; tb[ ti + 2 ] = fb; tb[ ti + 3 ] = fa;\n\n\t\t\t\t}\n\n\t\t\t} else if ( mode == 3 ) {\t// check if can be blended\n\n\t\t\t\tvar fa = sb[ si + 3 ], fr = sb[ si ], fg = sb[ si + 1 ], fb = sb[ si + 2 ];\n\t\t\t\tvar ba = tb[ ti + 3 ], br = tb[ ti ], bg = tb[ ti + 1 ], bb = tb[ ti + 2 ];\n\t\t\t\tif ( fa == ba && fr == br && fg == bg && fb == bb ) continue;\n\t\t\t\t//if(fa!=255 && ba!=0) return false;\n\t\t\t\tif ( fa < 220 && ba > 20 ) return false;\n\n\t\t\t}\n\n\t\t}\n\n\treturn true;\n\n};\n\nexport { RGBMLoader };\n"],
  "mappings": ";;;;;;;;;;AASA,IAAM,aAAN,cAAyB,kBAAkB;AAAA,EAE1C,YAAa,SAAU;AAEtB,UAAO,OAAQ;AAEf,SAAK,OAAO;AACZ,SAAK,WAAW;AAAA,EAEjB;AAAA,EAEA,YAAa,OAAQ;AAEpB,SAAK,OAAO;AACZ,WAAO;AAAA,EAER;AAAA,EAEA,YAAa,OAAQ;AAEpB,SAAK,WAAW;AAChB,WAAO;AAAA,EAER;AAAA,EAEA,YAAa,MAAM,QAAQ,YAAY,SAAU;AAEhD,UAAM,UAAU,IAAI,YAAY;AAEhC,aAAU,IAAI,GAAG,IAAI,GAAG,KAAO;AAE9B,cAAQ,OAAQ,CAAE,IAAI;AAAA,IAEvB;AAEA,QAAI,SAAS;AAEb,UAAM,QAAQ;AAEd,aAAS,YAAa,GAAI;AAEzB,YAAM,KAAM,KAAM,CAAE,GAAG,SAAW,OAAQ;AAEzC,gBAAQ,OAAQ,CAAE,IAAI;AAEtB;AAEA,YAAK,WAAW,GAAI;AAEnB,kBAAQ,cAAc;AAEtB,cAAK,OAAS,QAAQ,OAAQ;AAAA,QAE/B;AAAA,MAED,GAAG,QAAW,OAAQ;AAAA,IAEvB;AAEA,aAAU,IAAI,GAAG,IAAI,KAAK,QAAQ,EAAG,GAAI;AAExC,kBAAa,CAAE;AAAA,IAEhB;AAEA,YAAQ,OAAO,KAAK;AACpB,YAAQ,SAAS;AACjB,YAAQ,YAAY;AACpB,YAAQ,kBAAkB;AAE1B,WAAO;AAAA,EAER;AAAA,EAEA,iBAAkB,MAAM,YAAa;AAEpC,WAAO,IAAI,QAAS,CAAE,SAAS,WAAY;AAE1C,WAAK,YAAa,MAAM,SAAS,YAAY,MAAO;AAAA,IAErD,CAAE;AAAA,EAEH;AAAA,EAEA,MAAO,QAAS;AAEf,UAAM,MAAM,KAAK,OAAQ,MAAO;AAChC,UAAM,OAAO,KAAK,QAAS,GAAI,EAAG,CAAE;AAEpC,UAAM,OAAO,IAAI,WAAY,IAAK;AAClC,UAAM,OAAO,IAAI,QAAQ,IAAI,SAAS;AAEtC,UAAM,SAAW,KAAK,SAAS,gBAAkB,IAAI,YAAa,IAAK,IAAI,IAAI,aAAc,IAAK;AAIlG,aAAU,IAAI,GAAG,IAAI,KAAK,QAAQ,KAAK,GAAI;AAE1C,YAAM,IAAI,KAAM,IAAI,CAAE,IAAI;AAC1B,YAAM,IAAI,KAAM,IAAI,CAAE,IAAI;AAC1B,YAAM,IAAI,KAAM,IAAI,CAAE,IAAI;AAC1B,YAAM,IAAI,KAAM,IAAI,CAAE,IAAI;AAE1B,UAAK,KAAK,SAAS,eAAgB;AAElC,eAAQ,IAAI,CAAE,IAAI,UAAU,YAAa,KAAK,IAAK,IAAI,IAAI,KAAK,UAAU,KAAM,CAAE;AAClF,eAAQ,IAAI,CAAE,IAAI,UAAU,YAAa,KAAK,IAAK,IAAI,IAAI,KAAK,UAAU,KAAM,CAAE;AAClF,eAAQ,IAAI,CAAE,IAAI,UAAU,YAAa,KAAK,IAAK,IAAI,IAAI,KAAK,UAAU,KAAM,CAAE;AAClF,eAAQ,IAAI,CAAE,IAAI,UAAU,YAAa,CAAE;AAAA,MAE5C,OAAO;AAEN,eAAQ,IAAI,CAAE,IAAI,IAAI,IAAI,KAAK;AAC/B,eAAQ,IAAI,CAAE,IAAI,IAAI,IAAI,KAAK;AAC/B,eAAQ,IAAI,CAAE,IAAI,IAAI,IAAI,KAAK;AAC/B,eAAQ,IAAI,CAAE,IAAI;AAAA,MAEnB;AAAA,IAED;AAEA,WAAO;AAAA,MACN,OAAO,IAAI;AAAA,MACX,QAAQ,IAAI;AAAA,MACZ,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM,KAAK;AAAA,MACX,OAAO;AAAA,IACR;AAAA,EAED;AAED;AAIA,IAAI,OAAO,CAAC;AAEZ,KAAK,UAAU,SAAW,KAAM;AAE/B,MAAI,IAAI,IAAI,OAAO,IAAI,IAAI;AAC3B,MAAK,IAAI,KAAK,QAAQ,KAAO,QAAO,CAAE,KAAK,QAAQ,YAAa,IAAI,MAAM,GAAG,GAAG,GAAI,EAAE,MAAO;AAE7F,MAAI,OAAO,CAAC;AACZ,MAAK,IAAI,OAAQ,CAAE,EAAE,QAAQ,KAAO,KAAI,OAAQ,CAAE,EAAE,OAAO,IAAI;AAE/D,MAAI,MAAM,IAAI,IAAI,GAAG,MAAM,IAAI,WAAY,GAAI,GAAG,QAAQ,IAAI,WAAY,GAAI,GAAG,OAAO,IAAI,WAAY,GAAI;AAC5G,WAAU,IAAI,GAAG,IAAI,IAAI,OAAO,QAAQ,KAAO;AAE9C,QAAI,MAAM,IAAI,OAAQ,CAAE;AACxB,QAAI,KAAK,IAAI,KAAK,GAAG,KAAK,IAAI,KAAK,GAAG,KAAK,IAAI,KAAK,OAAO,KAAK,IAAI,KAAK;AACzE,QAAI,QAAQ,KAAK,QAAQ,YAAa,IAAI,MAAM,IAAI,IAAI,GAAI;AAE5D,QAAK,KAAK,EAAI,UAAU,IAAI,GAAG,IAAI,KAAK,IAAO,MAAM,CAAE,IAAI,IAAK,CAAE;AAElE,QAAK,IAAI,SAAS,EAAI,MAAK,UAAW,OAAO,IAAI,IAAI,KAAK,GAAG,GAAG,IAAI,IAAI,CAAE;AAAA,aAChE,IAAI,SAAS,EAAI,MAAK,UAAW,OAAO,IAAI,IAAI,KAAK,GAAG,GAAG,IAAI,IAAI,CAAE;AAE/E,SAAK,KAAM,IAAI,OAAO,MAAO,CAAE,CAAE;AAEjC,QAAK,IAAI,WAAW,EAAI,MAAK,UAAW,OAAO,IAAI,IAAI,KAAK,GAAG,GAAG,IAAI,IAAI,CAAE;AAAA,aAClE,IAAI,WAAW,EAAI,UAAU,IAAI,GAAG,IAAI,KAAK,IAAO,KAAK,CAAE,IAAI,KAAM,CAAE;AAAA,EAElF;AAEA,SAAO;AAER;AAEA,KAAK,QAAQ,cAAc,SAAW,MAAM,GAAG,GAAG,KAAM;AAEvD,MAAI,OAAO,IAAI,GAAG,MAAM,KAAK,OAAO,QAAS,GAAI;AACjD,MAAI,MAAM,KAAK,KAAM,IAAI,MAAM,CAAE;AAEjC,MAAI,KAAK,IAAI,WAAY,OAAO,CAAE,GAAG,OAAO,IAAI,YAAa,GAAG,MAAO;AACvE,MAAI,QAAQ,IAAI,OAAO,QAAQ,IAAI;AACnC,MAAI,KAAK,KAAK,KAAK;AAEnB,MAAK,SAAS,GAAI;AAEjB,QAAI,QAAQ,QAAQ;AACpB,QAAK,SAAS,EAAI,UAAU,IAAI,GAAG,IAAI,OAAO,KAAK,GAAI;AAEtD,SAAI,CAAE,IAAI,KAAM,CAAE;AAAG,SAAI,IAAI,CAAE,IAAI,KAAM,IAAI,CAAE;AAAG,SAAI,IAAI,CAAE,IAAI,KAAM,IAAI,CAAE;AAAG,SAAI,IAAI,CAAE,IAAI,KAAM,IAAI,CAAE;AAAA,IAE1G;AAEA,QAAK,SAAS,GAAK,UAAU,IAAI,GAAG,IAAI,OAAO,KAAO;AAErD,SAAI,CAAE,IAAI,KAAM,KAAK,CAAE;AAAA,IAExB;AAAA,EAED,WAAY,SAAS,GAAI;AAExB,QAAI,KAAK,IAAI,KAAM,MAAO;AAC1B,QAAK,MAAM,MAAO;AAEjB,UAAK,SAAS,EAAI,UAAU,IAAI,GAAG,IAAI,MAAM,KAAO;AAEnD,YAAI,KAAK,IAAI;AAAG,aAAM,CAAE,IAAM,OAAO,KAAS,KAAM,KAAK,CAAE,KAAK,KAAS,KAAM,KAAK,CAAE,KAAK,IAAM,KAAM,EAAG;AAAA,MAE3G;AAEA,UAAK,SAAS,GAAK,UAAU,IAAI,GAAG,IAAI,MAAM,KAAO;AAEpD,YAAI,KAAK,IAAI;AAAG,aAAM,CAAE,IAAM,OAAO,KAAS,KAAM,KAAK,CAAE,KAAK,KAAS,KAAM,KAAK,CAAE,KAAK,IAAM,KAAM,EAAG;AAAA,MAE3G;AAAA,IAED,OAAO;AAEN,UAAI,KAAK,GAAI,CAAE,GAAG,KAAK,GAAI,CAAE,GAAG,KAAK,GAAI,CAAE;AAC3C,UAAK,SAAS,EAAI,UAAU,IAAI,GAAG,IAAI,MAAM,KAAO;AAEnD,YAAI,KAAK,KAAK,GAAG,KAAK,IAAI;AAAG,aAAM,CAAE,IAAM,OAAO,KAAS,KAAM,KAAK,CAAE,KAAK,KAAS,KAAM,KAAK,CAAE,KAAK,IAAM,KAAM,EAAG;AACvH,YAAK,KAAM,EAAG,KAAK,MAAM,KAAM,KAAK,CAAE,KAAK,MAAM,KAAM,KAAK,CAAE,KAAK,GAAK,IAAI,KAAK,CAAE,IAAI;AAAA,MAExF;AAEA,UAAK,SAAS,GAAK,UAAU,IAAI,GAAG,IAAI,MAAM,KAAO;AAEpD,YAAI,KAAK,KAAK,GAAG,KAAK,IAAI;AAAG,aAAM,CAAE,IAAM,OAAO,KAAS,KAAM,KAAK,CAAE,KAAK,KAAS,KAAM,KAAK,CAAE,KAAK,IAAM,KAAM,EAAG;AACvH,YAAK,GAAI,MAAM,EAAG,KAAK,MAAM,GAAI,MAAM,KAAK,CAAE,KAAK,MAAM,GAAI,MAAM,KAAK,CAAE,KAAK,GAAK,IAAI,KAAK,CAAE,IAAI;AAAA,MAEpG;AAAA,IAED;AAAA,EAED,WAAY,SAAS,GAAI;AAExB,QAAI,IAAI,IAAI,KAAM,MAAO,GAAG,KAAK,IAAI,KAAM,MAAO,GAAG,KAAK,KAAK,GAAG,SAAS;AAE3E,QAAK,SAAS,EAAI,UAAU,IAAI,GAAG,IAAI,GAAG,KAAO;AAEhD,UAAI,KAAK,IAAI,KAAK,KAAK,IAAI;AAC3B,eAAU,IAAI,GAAG,IAAI,GAAG,KAAO;AAE9B,YAAI,KAAO,KAAK,KAAO,GAAG,IAAQ,KAAM,MAAO,KAAK,EAAI,KAAO,MAAQ,IAAI,MAAO,KAAU,GAAK,KAAK,IAAI;AAAG,WAAI,EAAG,IAAI,EAAG,EAAG;AAAG,WAAI,KAAK,CAAE,IAAI,EAAG,KAAK,CAAE;AAAG,WAAI,KAAK,CAAE,IAAI,EAAG,KAAK,CAAE;AAAG,WAAI,KAAK,CAAE,IAAM,IAAI,KAAO,GAAI,CAAE,IAAI;AAAA,MAEhO;AAAA,IAED;AAEA,QAAK,SAAS,EAAI,UAAU,IAAI,GAAG,IAAI,GAAG,KAAO;AAEhD,UAAI,KAAK,IAAI,KAAK,KAAK,IAAI;AAC3B,eAAU,IAAI,GAAG,IAAI,GAAG,KAAO;AAE9B,YAAI,KAAO,KAAK,KAAO,GAAG,IAAQ,KAAM,MAAO,KAAK,EAAI,KAAO,MAAQ,IAAI,MAAO,KAAU,GAAK,KAAK,IAAI;AAAG,WAAI,EAAG,IAAI,EAAG,EAAG;AAAG,WAAI,KAAK,CAAE,IAAI,EAAG,KAAK,CAAE;AAAG,WAAI,KAAK,CAAE,IAAI,EAAG,KAAK,CAAE;AAAG,WAAI,KAAK,CAAE,IAAM,IAAI,KAAO,GAAI,CAAE,IAAI;AAAA,MAEhO;AAAA,IAED;AAEA,QAAK,SAAS,EAAI,UAAU,IAAI,GAAG,IAAI,GAAG,KAAO;AAEhD,UAAI,KAAK,IAAI,KAAK,KAAK,IAAI;AAC3B,eAAU,IAAI,GAAG,IAAI,GAAG,KAAO;AAE9B,YAAI,KAAO,KAAK,KAAO,GAAG,IAAQ,KAAM,MAAO,KAAK,EAAI,KAAO,MAAQ,IAAI,MAAO,KAAU,IAAM,KAAK,IAAI;AAAG,WAAI,EAAG,IAAI,EAAG,EAAG;AAAG,WAAI,KAAK,CAAE,IAAI,EAAG,KAAK,CAAE;AAAG,WAAI,KAAK,CAAE,IAAI,EAAG,KAAK,CAAE;AAAG,WAAI,KAAK,CAAE,IAAM,IAAI,KAAO,GAAI,CAAE,IAAI;AAAA,MAEjO;AAAA,IAED;AAEA,QAAK,SAAS,EAAI,UAAU,IAAI,GAAG,IAAI,MAAM,KAAO;AAEnD,UAAI,KAAK,KAAK,GAAG,IAAI,KAAM,CAAE,GAAG,KAAK,IAAI;AAAG,SAAI,EAAG,IAAI,EAAG,EAAG;AAAG,SAAI,KAAK,CAAE,IAAI,EAAG,KAAK,CAAE;AAAG,SAAI,KAAK,CAAE,IAAI,EAAG,KAAK,CAAE;AAAG,SAAI,KAAK,CAAE,IAAM,IAAI,KAAO,GAAI,CAAE,IAAI;AAAA,IAE/J;AAAA,EAED,WAAY,SAAS,GAAI;AAExB,QAAK,SAAS,EAAI,UAAU,IAAI,GAAG,IAAI,MAAM,KAAO;AAEnD,UAAI,KAAK,KAAK,GAAG,KAAK,KAAK,GAAG,KAAK,KAAM,EAAG;AAAG,SAAI,EAAG,IAAI;AAAI,SAAI,KAAK,CAAE,IAAI;AAAI,SAAI,KAAK,CAAE,IAAI;AAAI,SAAI,KAAK,CAAE,IAAI,KAAM,KAAK,CAAE;AAAA,IAEjI;AAEA,QAAK,SAAS,GAAK,UAAU,IAAI,GAAG,IAAI,MAAM,KAAO;AAEpD,UAAI,KAAK,KAAK,GAAG,KAAK,KAAK,GAAG,KAAK,KAAM,EAAG;AAAG,SAAI,EAAG,IAAI;AAAI,SAAI,KAAK,CAAE,IAAI;AAAI,SAAI,KAAK,CAAE,IAAI;AAAI,SAAI,KAAK,CAAE,IAAI,KAAM,KAAK,CAAE;AAAA,IAEjI;AAAA,EAED,WAAY,SAAS,GAAI;AAExB,QAAI,KAAK,IAAI,KAAM,MAAO,IAAI,IAAI,KAAM,MAAO,IAAI;AACnD,aAAU,IAAI,GAAG,IAAI,GAAG,KAAO;AAE9B,UAAI,MAAM,IAAI,KAAK,KAAK,IAAI;AAC5B,UAAK,SAAS,EAAI,UAAU,IAAI,GAAG,IAAI,GAAG,KAAO;AAEhD,YAAI,KAAK,OAAU,KAAM,OAAQ,MAAM,EAAI,MAAQ,KAAM,IAAI,KAAU,IAAK,KAAO,MAAM,KAAK,MAAQ,IAAI;AAAK,aAAM,KAAK,CAAE,IAAM,MAAM,KAAS,MAAM,KAAS,MAAM,IAAM;AAAA,MAE7K;AAAA,eACU,SAAS,EAAI,UAAU,IAAI,GAAG,IAAI,GAAG,KAAO;AAErD,YAAI,KAAK,MAAS,KAAM,OAAQ,MAAM,EAAI,MAAQ,MAAQ,IAAI,MAAO,KAAU,IAAK,KAAO,MAAM,KAAK,KAAO,IAAI;AAAK,aAAM,KAAK,CAAE,IAAM,MAAM,KAAS,MAAM,KAAS,MAAM,IAAM;AAAA,MAEpL;AAAA,eACU,SAAS,EAAI,UAAU,IAAI,GAAG,IAAI,GAAG,KAAO;AAErD,YAAI,KAAK,MAAS,KAAM,OAAQ,MAAM,EAAI,MAAQ,MAAQ,IAAI,MAAO,KAAU,KAAM,KAAO,MAAM,KAAK,KAAO,IAAI;AAAK,aAAM,KAAK,CAAE,IAAM,MAAM,KAAS,MAAM,KAAS,MAAM,IAAM;AAAA,MAErL;AAAA,eACU,SAAS,EAAI,UAAU,IAAI,GAAG,IAAI,GAAG,KAAO;AAErD,YAAI,KAAK,KAAM,MAAM,CAAE,GAAG,KAAO,MAAM,KAAO,IAAI;AAAK,aAAM,KAAK,CAAE,IAAM,MAAM,KAAS,MAAM,KAAS,MAAM,IAAM;AAAA,MAErH;AAAA,eACU,SAAS,GAAK,UAAU,IAAI,GAAG,IAAI,GAAG,KAAO;AAEtD,YAAI,KAAK,KAAM,OAAQ,KAAK,EAAI,GAAG,KAAO,GAAI,MAAM,OAAQ,KAAK,EAAI,KAAK,KAAO,IAAI;AAAK,aAAM,KAAK,CAAE,IAAM,MAAM,KAAS,MAAM,KAAS,MAAM,IAAM;AAAA,MAExJ;AAAA,IAED;AAAA,EAED;AAGA,SAAO;AAER;AAIA,KAAK,SAAS,SAAW,MAAO;AAE/B,MAAI,OAAO,IAAI,WAAY,IAAK,GAAG,SAAS,GAAG,MAAM,KAAK,MAAM,MAAM,IAAI,YAAY,MAAM,IAAI;AAChG,MAAI,MAAM,EAAE,MAAM,CAAC,GAAG,QAAQ,CAAC,EAAE;AACjC,MAAI,KAAK,IAAI,WAAY,KAAK,MAAO,GAAG,OAAO;AAC/C,MAAI,IAAI,OAAO;AACf,MAAI,MAAM,MAAM;AAEhB,MAAI,OAAO,CAAE,KAAM,IAAM,IAAM,IAAM,IAAM,IAAM,IAAM,EAAK;AAC5D,WAAU,IAAI,GAAG,IAAI,GAAG,IAAO,KAAK,KAAM,CAAE,KAAK,KAAM,CAAE,EAAI,OAAM,IAAI,MAAO,8BAA+B;AAE7G,SAAQ,SAAS,KAAK,QAAS;AAE9B,QAAI,MAAM,IAAI,SAAU,MAAM,MAAO;AAAG,cAAU;AAClD,QAAI,OAAO,IAAI,UAAW,MAAM,QAAQ,CAAE;AAAG,cAAU;AAGvD,QAAK,QAAQ,QAAS;AAErB,WAAK,OAAO,MAAO,MAAM,QAAQ,GAAI;AAAA,IAEtC,WAAY,QAAQ,QAAS;AAE5B,UAAI,KAAM,IAAK,IAAI,KAAK,MAAO,QAAQ,SAAS,CAAE;AAAA,IAEnD,WAAY,QAAQ,QAAS;AAE5B,eAAU,IAAI,GAAG,IAAI,KAAK,IAAO,IAAI,OAAO,CAAE,IAAI,KAAM,SAAS,CAAE;AACnE,cAAQ;AAAA,IAET,WAAY,QAAQ,QAAS;AAE5B,UAAI,KAAM,IAAK,IAAI,EAAE,YAAY,IAAK,MAAM,MAAO,GAAG,WAAW,IAAK,MAAM,SAAS,CAAE,EAAE;AACzF,WAAK,IAAI,WAAY,KAAK,MAAO;AAAA,IAElC,WAAY,QAAQ,QAAS;AAE5B,UAAK,QAAQ,GAAI;AAEhB,YAAI,KAAK,IAAI,OAAQ,IAAI,OAAO,SAAS,CAAE;AAC3C,WAAG,OAAO,KAAK,OAAO,YAAa,KAAK,GAAG,MAAO,GAAG,IAAK,GAAG,GAAG,KAAK,OAAO,GAAG,KAAK,MAAO;AAAG,eAAO;AAAA,MAEtG;AAEA,UAAI,MAAM,EAAE,GAAG,IAAK,MAAM,SAAS,EAAG,GAAG,GAAG,IAAK,MAAM,SAAS,EAAG,GAAG,OAAO,IAAK,MAAM,SAAS,CAAE,GAAG,QAAQ,IAAK,MAAM,SAAS,CAAE,EAAE;AACtI,UAAI,MAAM,IAAK,MAAM,SAAS,EAAG;AAAG,YAAM,IAAK,MAAM,SAAS,EAAG,KAAM,OAAO,IAAI,MAAM;AACxF,UAAI,MAAM,EAAE,MAAM,KAAK,OAAO,KAAK,MAAO,MAAM,GAAK,GAAG,SAAS,KAAM,SAAS,EAAG,GAAG,OAAO,KAAM,SAAS,EAAG,EAAE;AAEjH,UAAI,OAAO,KAAM,GAAI;AAAA,IAEtB,WAAY,QAAQ,QAAS;AAE5B,eAAU,IAAI,GAAG,IAAI,MAAM,GAAG,IAAO,IAAI,OAAO,CAAE,IAAI,KAAM,SAAS,IAAI,CAAE;AAC3E,cAAQ,MAAM;AAAA,IAEf,WAAY,QAAQ,QAAS;AAE5B,UAAI,KAAM,IAAK,IAAI,CAAE,IAAI,SAAU,MAAM,MAAO,GAAG,IAAI,SAAU,MAAM,SAAS,CAAE,GAAG,KAAM,SAAS,CAAE,CAAE;AAAA,IAEzG,WAAY,QAAQ,QAAS;AAE5B,UAAI,KAAM,IAAK,IAAI,CAAC;AACpB,eAAU,IAAI,GAAG,IAAI,GAAG,IAAO,KAAI,KAAM,IAAK,EAAE,KAAM,IAAI,SAAU,MAAM,SAAS,IAAI,CAAE,CAAE;AAAA,IAE5F,WAAY,QAAQ,UAAU,QAAQ,QAAS;AAE9C,UAAK,IAAI,KAAM,IAAK,KAAK,KAAO,KAAI,KAAM,IAAK,IAAI,CAAC;AACpD,UAAI,KAAK,IAAI,SAAU,MAAM,MAAO;AACpC,aAAO,IAAI,UAAW,MAAM,QAAQ,KAAK,MAAO;AAChD,UAAI,KAAK,SAAS,MAAM,KAAK;AAC7B,UAAK,QAAQ,OAAS,QAAO,IAAI,UAAW,MAAM,KAAK,GAAG,EAAG;AAAA,WACxD;AAEJ,cAAM,KAAK,OAAO,SAAU,KAAK,MAAO,KAAK,GAAG,KAAK,IAAI,EAAG,CAAE;AAC9D,eAAO,IAAI,SAAU,KAAK,GAAG,IAAI,MAAO;AAAA,MAEzC;AAEA,UAAI,KAAM,IAAK,EAAG,IAAK,IAAI;AAAA,IAE5B,WAAY,QAAQ,QAAS;AAE5B,UAAK,IAAI,KAAM,IAAK,KAAK,KAAO,KAAI,KAAM,IAAK,IAAI,CAAC;AACpD,UAAI,KAAK,GAAG,MAAM;AAClB,WAAK,IAAI,SAAU,MAAM,GAAI;AAC7B,aAAO,IAAI,UAAW,MAAM,KAAK,KAAK,GAAI;AAAG,YAAM,KAAK;AACxD,UAAI,QAAQ,KAAM,GAAI;AAAG,aAAO;AAChC,WAAK,IAAI,SAAU,MAAM,GAAI;AAC7B,UAAI,UAAW,MAAM,KAAK,KAAK,GAAI;AAAG,YAAM,KAAK;AACjD,WAAK,IAAI,SAAU,MAAM,GAAI;AAC7B,UAAI,SAAU,MAAM,KAAK,KAAK,GAAI;AAAG,YAAM,KAAK;AAChD,UAAI,KAAK,OAAQ,MAAM;AACvB,UAAK,SAAS,EAAI,QAAO,IAAI,SAAU,MAAM,KAAK,EAAG;AAAA,WAChD;AAEJ,cAAM,KAAK,OAAO,SAAU,KAAK,MAAO,KAAK,MAAM,EAAG,CAAE;AACxD,eAAO,IAAI,SAAU,KAAK,GAAG,IAAI,MAAO;AAAA,MAEzC;AAEA,UAAI,KAAM,IAAK,EAAG,IAAK,IAAI;AAAA,IAE5B,WAAY,QAAQ,QAAS;AAE5B,UAAI,KAAM,IAAK,IAAI,IAAI,UAAW,MAAM,QAAQ,GAAI;AAAA,IAErD,WAAY,QAAQ,QAAS;AAE5B,UAAI,KAAK,IAAI,KAAM,MAAO,EAAE,SAAS;AACrC,UAAI,KAAM,IAAK,IAAI,CAAC;AAAG,eAAU,IAAI,GAAG,IAAI,IAAI,IAAO,KAAI,KAAM,IAAK,EAAE,KAAM,IAAK,MAAM,SAAS,IAAI,CAAE,CAAE;AAAA,IAE3G,WAAY,QAAQ,QAAS;AAE5B,UAAK,IAAI,SAAS,EAAI,KAAI,KAAM,IAAK,IAAI,IAAI,UAAW,MAAM,QAAQ,GAAI;AAAA,eAChE,IAAI,SAAS,EAAI,KAAI,KAAM,IAAK,IAAI,IAAK,MAAM,MAAO;AAAA,eACtD,IAAI,SAAS,EAAI,KAAI,KAAM,IAAK,IAAI,CAAE,IAAK,MAAM,MAAO,GAAG,IAAK,MAAM,SAAS,CAAE,GAAG,IAAK,MAAM,SAAS,CAAE,CAAE;AAAA,IAGvH,WAAY,QAAQ,OAAS,KAAI,KAAM,IAAK,IAAI,IAAI,SAAU,MAAM,MAAO,IAAI;AAAA,aACrE,QAAQ,OAAS,KAAI,KAAM,IAAK,IAAI,KAAM,MAAO;AAAA,aACjD,QAAQ,QAAS;AAE1B,UAAK,IAAI,SAAS,KAAK,IAAI,SAAS,EAAI,KAAI,KAAM,IAAK,IAAI,CAAE,IAAK,MAAM,MAAO,CAAE;AAAA,eACvE,IAAI,SAAS,KAAK,IAAI,SAAS,EAAI,KAAI,KAAM,IAAK,IAAI,CAAE,IAAK,MAAM,MAAO,GAAG,IAAK,MAAM,SAAS,CAAE,GAAG,IAAK,MAAM,SAAS,CAAE,CAAE;AAAA,eAC9H,IAAI,SAAS,EAAI,KAAI,KAAM,IAAK,IAAI,KAAM,MAAO;AAAA,IAE5D,WAAY,QAAQ,QAAS;AAE5B;AAAA,IAED;AAGA,cAAU;AACV,QAAI,SAAU,MAAM,MAAO;AAAG,cAAU;AAAA,EAEzC;AAEA,MAAK,QAAQ,GAAI;AAEhB,QAAI,KAAK,IAAI,OAAQ,IAAI,OAAO,SAAS,CAAE;AAC3C,OAAG,OAAO,KAAK,OAAO,YAAa,KAAK,GAAG,MAAO,GAAG,IAAK,GAAG,GAAG,KAAK,OAAO,GAAG,KAAK,MAAO;AAAA,EAE5F;AAEA,MAAI,OAAO,KAAK,OAAO,YAAa,KAAK,IAAI,IAAI,OAAO,IAAI,MAAO;AAEnE,SAAO,IAAI;AAAU,SAAO,IAAI;AAAW,SAAO,IAAI;AACtD,SAAO;AAER;AAEA,KAAK,OAAO,cAAc,SAAW,KAAK,IAAI,GAAG,GAAI;AAEpD,MAAI,MAAM,KAAK,OAAO,QAAS,GAAI,GAAG,MAAM,KAAK,KAAM,IAAI,MAAM,CAAE,GAAG,OAAO,IAAI,YAAc,MAAM,IAAI,IAAI,aAAc,CAAE;AAC7H,MAAK,IAAI,KAAM,MAAO,EAAI,MAAK,KAAK,WAAY,IAAI,IAAK;AAAA,MACpD,MAAK,KAAK,OAAO,SAAU,IAAI,IAAK;AAEzC,MAAK,IAAI,aAAa,EAAI,MAAK,KAAK,OAAO,YAAa,IAAI,KAAK,GAAG,GAAG,CAAE;AAAA,WAC/D,IAAI,aAAa,EAAI,MAAK,KAAK,OAAO,eAAgB,IAAI,GAAI;AAExE,SAAO;AAER;AAEA,KAAK,OAAO,WAAW,SAAW,MAAM,MAAO;AAE9C,MAAI,MAAM,KAAM,YAAa,EAAG,IAAI,WAAY,KAAK,QAAQ,GAAG,KAAK,SAAS,CAAE,GAAG,IAAK;AAAG,SAAO;AAEnG;AAEA,KAAK,aAAa,WAAY;AAE7B,MAAI,IAAI,CAAC;AAAG,IAAE,IAAI,CAAC;AAAG,IAAE,EAAE,IAAI,SAAW,GAAG,GAAI;AAE/C,QAAI,IAAI,YAAY,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG;AACtF,QAAK,EAAG,CAAE,KAAK,KAAK,EAAG,CAAE,KAAK,EAAI,QAAO,IAAI,IAAI,IAAI,EAAG,CAAE;AAAG,QAAI,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,EAAE,GAAG,IAAI,KAAK;AAClJ,QAAK,EAAG,KAAI,IAAI,EAAG,EAAE,WAAW,KAAK,CAAE;AAAG,WAAQ,KAAK,GAAI;AAE1D,UAAI,EAAG,GAAG,GAAG,CAAE;AAAG,UAAI,EAAG,GAAG,IAAI,GAAG,CAAE;AAAG,WAAK;AAAG,UAAK,KAAK,GAAI;AAE7D,aAAO,IAAI,MAAO,EAAG,MAAK,KAAM,IAAI;AACpC,YAAI,KAAM,MAAM,KAAM,GAAG,IAAI,EAAG,IAAI,CAAE,IAAI,EAAG,IAAI,CAAE,KAAK;AAAG,YAAK,EAAG,KAAI,EAAE,EAAE,EAAG,GAAG,IAAI,CAAE;AAAG,UAAE,IAAK,IAAI,EAAG,EAAE,QAAQ,EAAE,aAAa,GAAG,CAAE,GAAG,CAAE;AAAG,YAAI,IAAI,KAAK;AAC3J,aAAK;AAAG;AAAA,MAGT;AAEA,UAAK,EAAG,KAAI,EAAE,EAAE,EAAG,GAAG,KAAM,KAAK,GAAK;AAAG,UAAK,KAAK,GAAI;AAEtD,YAAI,EAAE;AAAG,YAAI,EAAE;AAAG,aAAM,KAAK,KAAM;AAAG,aAAM,KAAK,KAAM;AAAA,MAExD;AAEA,UAAK,KAAK,GAAI;AAEb,YAAI,EAAG,GAAG,GAAG,CAAE,IAAI;AACnB,YAAI,EAAG,GAAG,IAAI,GAAG,CAAE,IAAI;AAAG,YAAI,EAAG,GAAG,IAAI,IAAI,CAAE,IAAI;AAAG,aAAK;AAAI,YAAI,IAAI;AAAG,iBAAU,IAAI,GAAG,IAAI,IAAI,KAAK,GAAI;AAE1G,YAAE,EAAG,CAAE,IAAI;AAAG,YAAE,EAAG,IAAI,CAAE,IAAI;AAAA,QAE9B;AAEA,iBAAU,IAAI,GACb,IAAI,GAAG,KAAO;AAEd,cAAI,IAAI,EAAG,GAAG,IAAI,IAAI,GAAG,CAAE;AAAG,YAAE,GAAK,EAAE,EAAG,CAAE,KAAK,KAAM,CAAE,IAAI;AAAG,cAAK,IAAI,EAAG,KAAI;AAAA,QAGjF;AAEA,aAAK,IAAI;AAAG,UAAG,EAAE,GAAG,CAAE;AAAG,UAAG,EAAE,GAAG,GAAG,EAAE,CAAE;AAAG,YAAI,EAAE;AAAG,YAAI,EAAE;AAC1D,YAAI,EAAG,EAAE,IAAK,KAAK,KAAM,GAAG,IAAI,GAAG,GAAG,GAAG,EAAE,CAAE;AAAG,YAAI,IAAI,EAAE,EAAG,EAAE,GAAG,GAAG,GAAG,EAAE,CAAE;AAAG,aAAM,KAAK,KAAM;AAAG,YAAI,IAAI,EAAE,EAAG,EAAE,GAAG,GAAG,GAAG,EAAE,CAAE;AAAG,aAAM,KAAK,KAAM;AAAG,UAAG,EAAE,GAAG,CAAE;AAChK,UAAG,EAAE,GAAG,GAAG,CAAE;AAAG,UAAG,EAAE,GAAG,CAAE;AAAG,UAAG,EAAE,GAAG,GAAG,CAAE;AAAA,MAG3C;AAEA,aAAQ,MAAM;AAEb,YAAI,IAAI,EAAG,EAAG,GAAG,CAAE,IAAI,CAAE;AAAG,aAAK,IAAI;AAAI,YAAI,IAAI,MAAM;AAAG,YAAK,MAAM,KAAK,GAAI;AAE7E,YAAG,GAAK,IAAI;AAAA,QAEb,WAAY,KAAK,KAAM;AAEtB;AAAA,QAED,OAAO;AAEN,cAAI,IAAI,IAAI,IAAI;AAChB,cAAK,IAAI,KAAM;AAEd,gBAAI,IAAI,EAAE,EAAG,IAAI,GAAI;AAAG,gBAAI,KAAM,MAAM,KAAM,EAAG,GAAG,GAAG,IAAI,CAAE;AAAG,iBAAK,IAAI;AAAA,UAE1E;AAEA,cAAI,IAAI,EAAG,EAAG,GAAG,CAAE,IAAI,CAAE;AAAG,eAAK,IAAI;AAAI,cAAI,IAAI,MAAM,GAAG,IAAI,EAAE,EAAG,CAAE,GAAG,KAAM,MAAM,KAAM,EAAG,GAAG,GAAG,IAAI,EAAG;AAC1G,eAAK,IAAI;AAAI,iBAAQ,IAAI,GAAI;AAE5B,cAAG,CAAE,IAAI,EAAG,MAAO,CAAE;AAAG,cAAG,CAAE,IAAI,EAAG,MAAO,CAAE;AAAG,cAAG,CAAE,IAAI,EAAG,MAAO,CAAE;AAAG,cAAG,CAAE,IAAI,EAAG,MAAO,CAAE;AAAA,UAE9F;AAEA,cAAI;AAAA,QAGL;AAAA,MAED;AAAA,IAED;AAEA,WAAO,EAAE,UAAU,IAAI,IAAI,EAAE,MAAO,GAAG,CAAE;AAAA,EAG1C;AAEA,IAAE,EAAE,IAAI,SAAW,GAAG,GAAI;AAEzB,QAAI,IAAI,EAAE;AAAQ,QAAK,KAAK,EAAI,QAAO;AAAG,QAAI,IAAI,IAAI,WAAY,KAAK,CAAE;AAAG,MAAE,IAAK,GAAG,CAAE;AAAG,WAAO;AAAA,EAEnG;AAEA,IAAE,EAAE,IAAI,SAAW,GAAG,GAAG,GAAG,GAAG,GAAG,GAAI;AAErC,QAAI,IAAI,EAAE,EAAE,GAAG,IAAI,EAAE,EAAE,GAAG,IAAI;AAAG,WAAQ,IAAI,GAAI;AAEhD,UAAI,IAAI,EAAG,EAAG,GAAG,CAAE,IAAI,CAAE;AAAG,WAAK,IAAI;AAAI,UAAI,IAAI,MAAM;AACvD,UAAK,KAAK,IAAK;AAEd,UAAG,CAAE,IAAI;AAAG;AAAA,MAEb,OAAO;AAEN,YAAI,IAAI,GAAG,IAAI;AAAG,YAAK,KAAK,IAAK;AAEhC,cAAI,IAAI,EAAG,GAAG,GAAG,CAAE;AAAG,eAAK;AAAG,cAAI,EAAG,IAAI,CAAE;AAAA,QAE5C,WAAY,KAAK,IAAK;AAErB,cAAI,IAAI,EAAG,GAAG,GAAG,CAAE;AACnB,eAAK;AAAA,QAGN,WAAY,KAAK,IAAK;AAErB,cAAI,KAAK,EAAG,GAAG,GAAG,CAAE;AAAG,eAAK;AAAA,QAE7B;AAEA,YAAI,IAAI,IAAI;AAAG,eAAQ,IAAI,GAAI;AAE9B,YAAG,CAAE,IAAI;AAAG;AAAA,QAEb;AAAA,MAED;AAAA,IAED;AAEA,WAAO;AAAA,EAGR;AAEA,IAAE,EAAE,IAAI,SAAW,GAAG,GAAG,GAAG,GAAI;AAE/B,QAAI,IAAI,GAAG,IAAI,GAAG,IAAI,EAAE,WAAW;AACnC,WAAQ,IAAI,GAAI;AAEf,UAAI,IAAI,EAAG,IAAI,CAAE;AAAG,QAAG,KAAK,CAAE,IAAI;AAAG,SAAK,KAAK,KAAM,CAAE,IAAI;AAAG,UAAK,IAAI,EAAG,KAAI;AAAG;AAAA,IAElF;AAEA,WAAQ,IAAI,GAAI;AAEf,QAAG,KAAK,CAAE,IAAI;AAAG,SAAK,KAAK,KAAM,CAAE,IAAI;AAAG;AAAA,IAE3C;AAEA,WAAO;AAAA,EAGR;AAEA,IAAE,EAAE,IAAI,SAAW,GAAG,GAAI;AAEzB,QAAI,IAAI,EAAE,EAAE,GAAG,IAAI,EAAE,QAAQ,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,EAAE;AAAG,aAAU,IAAI,GAAG,KAAK,GAAG,IAAM,GAAG,CAAE,IAAI;AAAG,SAAM,IAAI,GAAG,IAAI,GAAG,KAAK,EAAG,GAAG,EAAG,CAAE,CAAE;AACtI,QAAI,IAAI,EAAE;AAAG,QAAI;AAAG,MAAG,CAAE,IAAI;AAAG,SAAM,IAAI,GAAG,KAAK,GAAG,KAAO;AAE3D,UAAI,IAAI,EAAG,IAAI,CAAE,KAAK;AAAG,QAAG,CAAE,IAAI;AAAA,IAEnC;AAEA,SAAM,IAAI,GAAG,IAAI,GAAG,KAAK,GAAI;AAE5B,UAAI,EAAG,IAAI,CAAE;AAAG,UAAK,KAAK,GAAI;AAE7B,UAAG,CAAE,IAAI,EAAG,CAAE;AACd,UAAG,CAAE;AAAA,MAGN;AAAA,IAED;AAAA,EAED;AAEA,IAAE,EAAE,IAAI,SAAW,GAAG,GAAG,GAAI;AAE5B,QAAI,IAAI,EAAE,QAAQ,IAAI,EAAE,EAAE,GAAG,IAAI,EAAE;AAAG,aAAU,IAAI,GAAG,IAAI,GAAG,KAAK,EAAI,KAAK,EAAG,IAAI,CAAE,KAAK,GAAI;AAE7F,UAAI,IAAI,KAAK,GAAG,IAAI,EAAG,IAAI,CAAE,GAAG,IAAI,KAAK,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,EAAG,CAAE,KAAK,GAAG,IAAI,KAAM,KAAK;AAC3F,aAAQ,KAAK,GAAI;AAEhB,YAAI,IAAI,EAAG,CAAE,MAAM,KAAK;AAAG,UAAG,CAAE,IAAI;AAAG;AAAA,MAExC;AAAA,IAED;AAAA,EAED;AAEA,IAAE,EAAE,IAAI,SAAW,GAAG,GAAI;AAEzB,QAAI,IAAI,EAAE,EAAE,EAAE,GAAG,IAAI,KAAK;AAAG,aAAU,IAAI,GAAG,IAAI,EAAE,QACnD,KAAK,GAAI;AAET,UAAI,IAAI,EAAG,CAAE,KAAK,IAAI,EAAG,IAAI,CAAE;AAAG,QAAG,CAAE,IAAI,EAAG,CAAE,MAAM;AAAA,IAEvD;AAAA,EAED;AAEA,IAAE,EAAE,IAAI,SAAW,GAAG,GAAG,GAAI;AAE5B,QAAI,MAAO,IAAI;AAAK,QAAI,IAAI,MAAM;AAAG,MAAG,CAAE,KAAK;AAAG,MAAG,IAAI,CAAE,KAAK,MAAM;AAAA,EAEvE;AAEA,IAAE,EAAE,IAAI,SAAW,GAAG,GAAG,GAAI;AAE5B,QAAI,MAAO,IAAI;AAAK,QAAI,IAAI,MAAM;AAAG,MAAG,CAAE,KAAK;AAAG,MAAG,IAAI,CAAE,KAAK,MAAM;AAAG,MAAG,IAAI,CAAE,KAAK,MAAM;AAAA,EAE9F;AAEA,IAAE,EAAE,IAAI,SAAW,GAAG,GAAG,GAAI;AAE5B,YAAS,EAAG,MAAM,CAAE,IAAI,GAAK,MAAM,KAAM,CAAE,KAAK,QAAU,IAAI,MAAQ,KAAK,KAAM;AAAA,EAElF;AAEA,IAAE,EAAE,IAAI,SAAW,GAAG,GAAG,GAAI;AAE5B,YAAS,EAAG,MAAM,CAAE,IAAI,GAAK,MAAM,KAAM,CAAE,KAAK,IAAI,GAAK,MAAM,KAAM,CAAE,KAAK,SAAW,IAAI,MAAQ,KAAK,KAAM;AAAA,EAE/G;AAEA,IAAE,EAAE,IAAI,SAAW,GAAG,GAAI;AAEzB,YAAS,EAAG,MAAM,CAAE,IAAI,GAAK,MAAM,KAAM,CAAE,KAAK,IAAI,GAAK,MAAM,KAAM,CAAE,KAAK,SAAW,IAAI;AAAA,EAE5F;AAEA,IAAE,EAAE,IAAI,SAAW,GAAG,GAAI;AAEzB,YAAS,EAAG,MAAM,CAAE,IAAI,GAAK,MAAM,KAAM,CAAE,KAAK,IAAI,GAAK,MAAM,KAAM,CAAE,KAAK,KAAK,GAAK,MAAM,KAAM,CAAE,KAAK,SAAW,IAAI;AAAA,EAEzH;AAEA,IAAE,EAAE,IAAI,WAAY;AAEnB,QAAI,IAAI,aAAa,IAAI;AACzB,WAAO,EAAE,GAAG,IAAI,EAAG,EAAG,GAAG,GAAG,IAAI,EAAG,EAAG,GAAG,GAAG,CAAE,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,EAAG,GAAG,GAAG,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,GAAI,GAAG,GAAG,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAE,GAAG,GAAG,IAAI,EAAG,EAAG,GAAG,GAAG,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,KAAM,GAAG,GAAG,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,CAAE,GAAG,GAAG,IAAI,EAAG,EAAG,GAAG,GAAG,IAAI,EAAG,GAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,EAAG,EAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,EAAG,KAAM,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,EAAG,KAAM,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,EAAG,GAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,EAAG,KAAK,EAAG,GAAG,GAAG,IAAI,EAAG,GAAI,GAAG,GAAG,IAAI,EAAG,EAAG,GAAG,GAAG,IAAI,EAAG,EAAG,GAAG,GAAG,IAAI,EAAG,IAAK,GAAG,GAAG,IAAI,EAAG,KAAK,EAAG,GAAG,GAAG,IAAI,EAAG,KAAK,EAAG,EAAE;AAAA,EAGx5B,EAAE;AACF,GAAE,WAAY;AAEb,QAAI,IAAI,EAAE,EAAE,GAAG,IAAI,KAAK;AAAI,aAAU,IAAI,GAAG,IAAI,GAAG,KAAO;AAE1D,UAAI,IAAI;AAAG,WAAM,IAAI,gBAAiB,KAAM,IAAI,eAAgB;AAChE,WAAM,IAAI,gBAAiB,KAAM,IAAI,cAAe;AAAG,WAAM,IAAI,gBAAiB,KAAM,IAAI,cAAe;AAAG,WAAM,IAAI,gBAAiB,KAAM,IAAI,aAAc;AACjK,QAAE,EAAG,CAAE,KAAM,MAAM,KAAK,KAAK,QAAS;AAAA,IAGvC;AAEA,aAAS,EAAG,GAAG,GAAG,GAAI;AAErB,aAAQ,OAAQ,EAAG,GAAE,KAAM,GAAG,CAAE;AAAA,IAGjC;AAEA,aAAU,IAAI,GAAG,IAAI,IAAI,KAAO;AAE/B,QAAE,EAAG,CAAE,IAAI,EAAE,EAAG,CAAE,KAAK,IAAI,EAAE,EAAG,CAAE;AAClC,QAAE,EAAG,CAAE,IAAI,EAAE,EAAG,CAAE,KAAK,IAAI,EAAE,EAAG,CAAE;AAAA,IAGnC;AAEA,MAAG,EAAE,GAAG,KAAK,CAAE;AAAG,MAAG,EAAE,GAAG,MAAM,KAAK,CAAE;AAAG,MAAG,EAAE,GAAG,MAAM,KAAK,CAAE;AAAG,MAAG,EAAE,GAAG,MAAM,KAAK,CAAE;AAAG,MAAE,EAAE,EAAG,EAAE,GAAG,CAAE;AACxG,MAAE,EAAE,EAAG,EAAE,GAAG,GAAG,EAAE,CAAE;AAAG,MAAE,EAAE,EAAG,EAAE,GAAG,CAAE;AAAG,MAAG,EAAE,GAAG,IAAI,CAAE;AAAG,MAAE,EAAE,EAAG,EAAE,GAAG,CAAE;AAAG,MAAE,EAAE,EAAG,EAAE,GAAG,GAAG,EAAE,CAAE;AAAG,MAAE,EAAE,EAAG,EAAE,GAAG,CAAE;AAAG,MAAG,EAAE,GAAG,IAAI,CAAE;AAAG,MAAG,EAAE,GAAG,KAAK,CAAE;AAChJ,MAAG,EAAE,GAAG,IAAI,CAAE;AAAG,MAAG,EAAE,GAAG,KAAK,CAAE;AAAA,EAGjC,GAAE;AAEF,SAAO,EAAE,EAAE;AAGZ,EAAE;AAGF,KAAK,OAAO,iBAAiB,SAAW,MAAM,KAAM;AAEnD,MAAI,IAAI,IAAI,OAAO,IAAI,IAAI;AAC3B,MAAI,MAAM,KAAK,OAAO,QAAS,GAAI,GAAG,OAAO,OAAO,GAAG,MAAM,KAAK,KAAM,IAAI,MAAM,CAAE;AACpF,MAAI,MAAM,IAAI,WAAY,IAAI,GAAI;AAClC,MAAI,KAAK;AAET,MAAI,eAAe,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAE;AACzC,MAAI,eAAe,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAE;AACzC,MAAI,gBAAgB,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAE;AAC1C,MAAI,gBAAgB,CAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAE;AAE1C,MAAI,OAAO;AACX,SAAQ,OAAO,GAAI;AAElB,QAAI,KAAK,cAAe,IAAK,GAAG,KAAK,cAAe,IAAK;AACzD,QAAI,KAAK,GAAG,KAAK;AACjB,QAAI,KAAK,aAAc,IAAK;AAAG,WAAQ,KAAK,GAAI;AAE/C,YAAM;AAAI;AAAA,IAEX;AAEA,QAAI,KAAK,aAAc,IAAK;AAAG,WAAQ,KAAK,GAAI;AAE/C,YAAM;AAAI;AAAA,IAEX;AAEA,QAAI,OAAO,KAAK,KAAM,KAAK,MAAM,CAAE;AACnC,SAAK,OAAO,YAAa,MAAM,KAAK,IAAI,IAAI,EAAG;AAE/C,QAAI,IAAI,GAAG,MAAM,aAAc,IAAK;AACpC,QAAI;AAEJ,WAAQ,MAAM,GAAI;AAEjB,UAAI,MAAM,aAAc,IAAK;AAC7B,UAAI,MAAQ,KAAK,IAAI,QAAU;AAE/B,aAAQ,MAAM,GAAI;AAEjB,YAAK,OAAO,GAAI;AAEf,gBAAM,KAAM,OAAO,CAAE;AAAG,gBAAQ,OAAS,KAAM,MAAM,KAAU;AAC/D,cAAK,MAAM,OAAQ,OAAO,EAAI,KAAO,OAAS,MAAQ,MAAM,MAAO;AAAA,QAEpE;AAEA,YAAK,OAAO,GAAI;AAEf,gBAAM,KAAM,OAAO,CAAE;AAAG,gBAAQ,OAAS,KAAM,MAAM,KAAU;AAC/D,cAAK,MAAM,OAAQ,OAAO,EAAI,KAAO,OAAS,MAAQ,MAAM,MAAO;AAAA,QAEpE;AAEA,YAAK,OAAO,GAAI;AAEf,gBAAM,KAAM,OAAO,CAAE;AAAG,gBAAQ,OAAS,KAAM,MAAM,KAAU;AAC/D,cAAK,MAAM,OAAQ,OAAO,EAAI,KAAO,OAAS,MAAQ,MAAM,MAAO;AAAA,QAEpE;AAEA,YAAK,OAAO,GAAI;AAEf,cAAI,KAAK,MAAM,MAAM,MAAM;AAC3B,mBAAU,IAAI,GAAG,IAAI,MAAM,IAAO,KAAK,KAAK,CAAE,IAAI,MAAQ,OAAO,KAAM,CAAE;AAAA,QAE1E;AAEA,eAAO;AAAK,eAAO;AAAA,MAEpB;AAEA;AAAM,aAAO;AAAA,IAEd;AAEA,QAAK,KAAK,MAAM,EAAI,OAAM,MAAO,IAAI;AACrC,WAAO,OAAO;AAAA,EAEf;AAEA,SAAO;AAER;AAEA,KAAK,OAAO,UAAU,SAAW,KAAM;AAEtC,MAAI,MAAM,CAAE,GAAG,MAAM,GAAG,GAAG,GAAG,MAAM,CAAE,EAAG,IAAI,KAAM;AACnD,SAAO,MAAM,IAAI;AAElB;AAEA,KAAK,OAAO,cAAc,SAAW,MAAM,KAAK,KAAK,GAAG,GAAI;AAE3D,MAAI,MAAM,KAAK,OAAO,QAAS,GAAI,GAAG,MAAM,KAAK,KAAM,IAAI,MAAM,CAAE,GAAG,QAAQ,KAAK,OAAO;AAC1F,QAAM,KAAK,KAAM,MAAM,CAAE;AAEzB,MAAI,GAAG,IAAI,OAAO,KAAM,GAAI,GAAG,IAAI;AAEnC,MAAK,OAAO,EAAI,MAAM,GAAI,IAAI,CAAE,GAAG,GAAG,CAAE,EAAG,OAAO,CAAE;AACpD,MAAK,QAAQ,EAAI,MAAM,IAAI,KAAK,IAAI,KAAK,IAAO,MAAM,IAAI,CAAE,IAAM,KAAM,IAAI,CAAE,KAAM,KAAM,IAAI,IAAI,GAAI,MAAM,KAAQ;AAEpH,WAAU,IAAI,GAAG,IAAI,GAAG,KAAO;AAE9B,QAAI,MAAM,IAAI;AAAK,SAAK,IAAI,IAAI;AAChC,WAAO,KAAM,KAAK,CAAE;AAAG,QAAI;AAE3B,QAAK,QAAQ,EAAI,QAAQ,IAAI,KAAK,IAAO,MAAM,IAAI,CAAE,IAAI,KAAM,KAAK,CAAE;AAAA,aAC5D,QAAQ,GAAI;AAErB,aAAQ,IAAI,KAAK,IAAO,MAAM,IAAI,CAAE,IAAI,KAAM,KAAK,CAAE;AAC/C,aAAQ,IAAI,KAAK,IAAO,MAAM,IAAI,CAAE,IAAM,KAAM,KAAK,CAAE,IAAI,KAAM,IAAI,IAAI,GAAI;AAAA,IAEpF,WAAY,QAAQ,GAAI;AAEvB,aAAQ,IAAI,KAAK,IAAO,MAAM,IAAI,CAAE,IAAM,KAAM,KAAK,CAAE,IAAI,KAAM,IAAI,IAAI,GAAI;AAAA,IAE9E,WAAY,QAAQ,GAAI;AAEvB,aAAQ,IAAI,KAAK,IAAO,MAAM,IAAI,CAAE,IAAM,KAAM,KAAK,CAAE,KAAM,KAAM,IAAI,IAAI,GAAI,MAAM;AACtE,aAAQ,IAAI,KAAK,IAAO,MAAM,IAAI,CAAE,IAAM,KAAM,KAAK,CAAE,KAAQ,KAAM,IAAI,IAAI,GAAI,IAAI,KAAM,IAAI,IAAI,GAAI,MAAQ;AAAA,IAE/H,OAAO;AAEN,aAAQ,IAAI,KAAK,IAAO,MAAM,IAAI,CAAE,IAAM,KAAM,KAAK,CAAE,IAAI,MAAO,GAAG,KAAM,IAAI,IAAI,GAAI,GAAG,CAAE;AACtF,aAAQ,IAAI,KAAK,IAAO,MAAM,IAAI,CAAE,IAAM,KAAM,KAAK,CAAE,IAAI,MAAO,KAAM,IAAI,IAAI,GAAI,GAAG,KAAM,IAAI,IAAI,GAAI,GAAG,KAAM,IAAI,IAAI,MAAM,GAAI,CAAE;AAAA,IAE7I;AAAA,EAED;AAEA,SAAO;AAER;AAEA,KAAK,OAAO,SAAS,SAAW,GAAG,GAAG,GAAI;AAEzC,MAAI,IAAI,IAAI,IAAI,GAAG,KAAO,IAAI,GAAK,KAAO,IAAI,GAAK,KAAO,IAAI;AAC9D,MAAK,KAAK,MAAM,KAAK,MAAM,KAAK,MAAM,KAAK,GAAK,QAAO;AAAA,WAC7C,KAAK,MAAM,KAAK,GAAK,QAAO;AACtC,SAAO;AAER;AAEA,KAAK,OAAO,QAAQ,SAAW,MAAM,QAAQ,KAAM;AAElD,MAAI,MAAM,KAAK;AACf,MAAI,QAAQ,IAAI,SAAU,MAAM,MAAO;AAAG,YAAU;AACpD,MAAI,SAAS,IAAI,SAAU,MAAM,MAAO;AAAG,YAAU;AACrD,MAAI,QAAQ,KAAM,MAAO;AAAG;AAC5B,MAAI,QAAQ,KAAM,MAAO;AAAG;AAC5B,MAAI,WAAW,KAAM,MAAO;AAAG;AAC/B,MAAI,SAAS,KAAM,MAAO;AAAG;AAC7B,MAAI,YAAY,KAAM,MAAO;AAAG;AAEjC;AAEA,KAAK,OAAO;AAAA,EACX,UAAU,SAAW,MAAM,GAAI;AAE9B,WAAQ,KAAM,CAAE,KAAK,EAAI;AAAM,WAAO;AAAA,EAEvC;AAAA,EACA,YAAY,SAAW,MAAM,GAAI;AAEhC,WAAS,KAAM,CAAE,KAAK,IAAM,KAAM,IAAI,CAAE;AAAA,EAEzC;AAAA,EACA,aAAa,SAAW,MAAM,GAAG,GAAI;AAEpC,SAAM,CAAE,IAAM,KAAK,IAAM;AAAK,SAAM,IAAI,CAAE,IAAI,IAAI;AAAA,EAEnD;AAAA,EACA,UAAU,SAAW,MAAM,GAAI;AAE9B,WAAS,KAAM,CAAE,KAAM,MAAM,MAAM,QAAc,KAAM,IAAI,CAAE,KAAK,KAAS,KAAM,IAAI,CAAE,KAAK,IAAM,KAAM,IAAI,CAAE;AAAA,EAE/G;AAAA,EACA,WAAW,SAAW,MAAM,GAAG,GAAI;AAElC,SAAM,CAAE,IAAM,KAAK,KAAO;AAAK,SAAM,IAAI,CAAE,IAAM,KAAK,KAAO;AAAK,SAAM,IAAI,CAAE,IAAM,KAAK,IAAM;AAAK,SAAM,IAAI,CAAE,IAAI,IAAI;AAAA,EAEzH;AAAA,EACA,WAAW,SAAW,MAAM,GAAG,GAAI;AAElC,QAAI,IAAI;AAAI,aAAU,IAAI,GAAG,IAAI,GAAG,IAAO,MAAK,OAAO,aAAc,KAAM,IAAI,CAAE,CAAE;AAAG,WAAO;AAAA,EAE9F;AAAA,EACA,YAAY,SAAW,MAAM,GAAG,GAAI;AAEnC,aAAU,IAAI,GAAG,IAAI,EAAE,QAAQ,IAAO,MAAM,IAAI,CAAE,IAAI,EAAE,WAAY,CAAE;AAAA,EAEvE;AAAA,EACA,WAAW,SAAW,MAAM,GAAG,GAAI;AAElC,QAAI,MAAM,CAAC;AAAG,aAAU,IAAI,GAAG,IAAI,GAAG,IAAO,KAAI,KAAM,KAAM,IAAI,CAAE,CAAE;AAAG,WAAO;AAAA,EAEhF;AAAA,EACA,KAAK,SAAW,GAAI;AAEnB,WAAO,EAAE,SAAS,IAAI,MAAM,IAAI;AAAA,EAEjC;AAAA,EACA,UAAU,SAAW,MAAM,GAAG,GAAI;AAEjC,QAAI,IAAI,IAAI;AACZ,aAAU,IAAI,GAAG,IAAI,GAAG,IAAO,MAAK,MAAM,KAAK,KAAK,IAAK,KAAM,IAAI,CAAE,EAAE,SAAU,EAAG,CAAE;AACtF,QAAI;AAEH,WAAK,mBAAoB,CAAE;AAAA,IAE5B,SAAU,GAAI;AAEb,aAAO,KAAK,KAAK,UAAW,MAAM,GAAG,CAAE;AAAA,IAExC;AAEA,WAAO;AAAA,EAER;AACD;AACA,KAAK,YAAY,SAAW,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,MAAM,MAAM,MAAO;AAEtE,MAAI,IAAI,KAAK,IAAK,IAAI,EAAG,GAAG,IAAI,KAAK,IAAK,IAAI,EAAG;AACjD,MAAI,KAAK,GAAG,KAAK;AACjB,WAAU,IAAI,GAAG,IAAI,GAAG;AACvB,aAAU,IAAI,GAAG,IAAI,GAAG,KAAO;AAE9B,UAAK,QAAQ,KAAK,QAAQ,GAAI;AAE7B,aAAO,IAAI,KAAK,KAAO;AAAG,cAAS,OAAO,KAAM,KAAK,OAAO,KAAO;AAAA,MAEpE,OAAO;AAEN,cAAS,CAAE,OAAO,KAAM,KAAK,OAAO,KAAO;AAAG,aAAO,IAAI,KAAK,KAAO;AAAA,MAEtE;AAEA,UAAK,QAAQ,GAAI;AAEhB,WAAI,EAAG,IAAI,GAAI,EAAG;AAAG,WAAI,KAAK,CAAE,IAAI,GAAI,KAAK,CAAE;AAAG,WAAI,KAAK,CAAE,IAAI,GAAI,KAAK,CAAE;AAAG,WAAI,KAAK,CAAE,IAAI,GAAI,KAAK,CAAE;AAAA,MAE1G,WAAY,QAAQ,GAAI;AAEvB,YAAI,KAAK,GAAI,KAAK,CAAE,KAAM,IAAI,MAAO,KAAK,GAAI,EAAG,IAAI,IAAI,KAAK,GAAI,KAAK,CAAE,IAAI,IAAI,KAAK,GAAI,KAAK,CAAE,IAAI;AACrG,YAAI,KAAK,GAAI,KAAK,CAAE,KAAM,IAAI,MAAO,KAAK,GAAI,EAAG,IAAI,IAAI,KAAK,GAAI,KAAK,CAAE,IAAI,IAAI,KAAK,GAAI,KAAK,CAAE,IAAI;AAErG,YAAI,MAAM,IAAI,IAAI,KAAK,KAAK,KAAK,KAAK,MAAQ,MAAM,IAAI,IAAI,IAAI;AAChE,WAAI,KAAK,CAAE,IAAI,MAAM;AACrB,WAAI,KAAK,CAAE,KAAM,KAAK,KAAK,OAAQ;AACnC,WAAI,KAAK,CAAE,KAAM,KAAK,KAAK,OAAQ;AACnC,WAAI,KAAK,CAAE,KAAM,KAAK,KAAK,OAAQ;AAAA,MAEpC,WAAY,QAAQ,GAAI;AAEvB,YAAI,KAAK,GAAI,KAAK,CAAE,GAAG,KAAK,GAAI,EAAG,GAAG,KAAK,GAAI,KAAK,CAAE,GAAG,KAAK,GAAI,KAAK,CAAE;AACzE,YAAI,KAAK,GAAI,KAAK,CAAE,GAAG,KAAK,GAAI,EAAG,GAAG,KAAK,GAAI,KAAK,CAAE,GAAG,KAAK,GAAI,KAAK,CAAE;AACzE,YAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,IAAK;AAEnD,aAAI,EAAG,IAAI;AAAG,aAAI,KAAK,CAAE,IAAI;AAAG,aAAI,KAAK,CAAE,IAAI;AAAG,aAAI,KAAK,CAAE,IAAI;AAAA,QAElE,OAAO;AAEN,aAAI,EAAG,IAAI;AAAI,aAAI,KAAK,CAAE,IAAI;AAAI,aAAI,KAAK,CAAE,IAAI;AAAI,aAAI,KAAK,CAAE,IAAI;AAAA,QAErE;AAAA,MAED,WAAY,QAAQ,GAAI;AAEvB,YAAI,KAAK,GAAI,KAAK,CAAE,GAAG,KAAK,GAAI,EAAG,GAAG,KAAK,GAAI,KAAK,CAAE,GAAG,KAAK,GAAI,KAAK,CAAE;AACzE,YAAI,KAAK,GAAI,KAAK,CAAE,GAAG,KAAK,GAAI,EAAG,GAAG,KAAK,GAAI,KAAK,CAAE,GAAG,KAAK,GAAI,KAAK,CAAE;AACzE,YAAK,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,GAAK;AAEpD,YAAK,KAAK,OAAO,KAAK,GAAK,QAAO;AAAA,MAEnC;AAAA,IAED;AAED,SAAO;AAER;",
  "names": []
}
